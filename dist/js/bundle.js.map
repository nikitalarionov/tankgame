{"version":3,"sources":["webpack:///webpack/bootstrap 8ececcb2e72fab9f4708","webpack:///./src/lib/utils.js","webpack:///./src/core/object.js","webpack:///./node_modules/victor/index.js","webpack:///./src/canvas.js","webpack:///./src/core/level.js","webpack:///./src/lib/command.js","webpack:///./src/lib/commands.js","webpack:///./src/core/fsm.js","webpack:///./node_modules/rbush-knn/index.js","webpack:///./node_modules/tinyqueue/index.js","webpack:///./src/core/ui.js","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/quickselect/index.js"],"names":["randomIntFromRange","randomColor","distance","min","max","Math","floor","random","getCanvasEl","canvas","document","querySelector","width","innerWidth","height","innerHeight","getRandomNum","colors","length","x1","y1","x2","y2","xDist","yDist","sqrt","pow","lvlBlockFactory","blockType","i","j","size","w","h","color","position","x","y","rect","debounce","f","ms","context","timer","args","onComplete","console","log","apply","clearTimeout","setTimeout","throttle","func","ctx","isThrottled","savedArgs","savedThis","wrapper","arguments","checkCollision","a","b","res","BaseObject","options","velocity","life","display","state","moving","direction","up","down","left","right","dirVec","remove","bind","getDefaultSize","queue","dir","onUpdateDirection","update","onUpdate","c","game","getCtx","beginPath","fillStyle","fill","closePath","onRender","hide","dt","getDt","step","stepX","stepY","vec","movement","startX","startY","endX","endY","directionX","round","directionY","data","remainDistance","LevelBlock","Bullet","lifeTime","damage","type","collided","owner","outdate","move","results","tree","forEach","target","idx","Tank","bullets","tower_angle","tower_velocity","bulletbuffer","components","gunDirection","headColor","gunColor","radius","restore","setGunAngle","val","gunAngle","tankComponent","push","indexOf","splice","enableControls","player","text","font","fillText","component","hp","count","labelTxt","time","Date","now","reloading","bullet","setPosition","insert","keys","shift","radian","PI","headHalfWidth","headWidth","headHalfHeight","headHeight","gunPosition","headX","headY","cos","sin","strokeStyle","moveTo","lineTo","lineWidth","stroke","margin","fillRect","drawBody","drawHead","drawGun","bulletLabelX","bulletLabelY","drawBulletCountLabel","drawHealthBar","showReloadText","draw","moveBy","updateBullets","updateComponents","directionName","pressed","events","listener","e","keyCode","directions","name","axis","onKeyPress","lastFireTime","lastLoopTime","fire","addEventListener","EnemyTank","scanRange","unit","fsm","initCPU","scanner","scanLine","cpu","pushState","stateScout","nextState","num","range","lastScoutScan","map","obj","fov","sameDirectionX","sameDirectionY","closerToY","closerToX","newX","newY","Enemy","Soldier","Sniper","drawFPS","value","Game","maxFps","listeners","paused","seconds","minutes","hours","frameDuration","lastPausedTime","loop","canvasEl","getContext","getCanvasCtx","mouse","event","clientX","clientY","start","reqId","requestAnimationFrame","performance","fps","render","toFixed","currentLevel","fn","clearRect","play","initTestEnvirotment","window","setCanvasEl","loadLevel","testLevel1Map","testLevel1","level","Object","create","objects","removeFromList","list","removeObj","testMap","rows","tank","cells","enemyTank","enemyTank2","enemyTank3","enemyTank4","enemyTank5","enemyTank6","enemyTank7","initPlayer","load","concat","CommandQueue","result","current","getFirst","getStatus","run","command","Command","Array","prototype","slice","call","Error","statuses","currentStatus","job","init","pop","relative","complete","undefined","StackFSM","stack","getCurrentState","Panel","el","title","children","tpl","model","listen","insertAdjacentHTML","getAttrs","Views"],"mappings":"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D,IAAIrL,CAA7D;AACA,gBAAIuL,kBAAkBE,SAAlB,IAA+BD,kBAAkBE,SAArD,EAAgE;AAC9D;AACA,qBAAKtB,IAAL;AACA,kBAAMuB,OAAO,OAAKrJ,MAAL,CAAYvC,CAAZ,IAAiBsL,IAAItL,CAAJ,GAAQ,EAAzB,CAAb;AACA,kBAAM6L,OAAO,CAAb;AACA,qBAAKlJ,KAAL,CAAW2D,IAAX,CAAgB,QAAhB,EAA0BsF,IAA1B,EAAgCC,IAAhC,EAAsC,IAAtC;AACD;AACF;AACF,SAnBD;AAoBA,aAAKT,aAAL,GAAqB,IAArB;AACD;AACF;;;;EAlL4B7F,I;;IAqLlBuG,K,WAAAA,K;;;;IAwBPC,O;;;;;;;;;;EAAgBD,K;;IA8BhBE,M;;;;;;;;;;EAAeD,O;;;;;;ACp0BrB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA,6BAA6B,kBAAkB;AAC/C,6BAA6B,kBAAkB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA,wCAAwC,eAAe;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;AACT;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC3yCA;;AACA;;;;AAEA;AACA,IAAME,UAAU,SAAVA,OAAU,CAAShL,GAAT,EAAciL,KAAd,EAAqBlM,CAArB,EAAwBC,CAAxB,EAA2BH,KAA3B,EAAkC;AAChDmB,MAAImC,SAAJ,GAAgBtD,SAAS,OAAzB;AACAmB,MAAI2F,IAAJ,GAAW,gBAAX;AACA3F,MAAI4F,QAAJ,CAAa5I,KAAKoG,KAAL,CAAW6H,KAAX,CAAb,EAAgClM,IAAI,EAApC,EAAwCC,IAAI,CAA5C;AACD,CAJD;;AAMA;;IACMkM,I;AAgBJ,kBAAc;AAAA;;AAAA,SAddC,MAcc,GAdL,GAcK;AAAA,SAZdC,SAYc,GAZF,EAYE;AAAA,SAVdrK,KAUc,GAVN;AACNsK,cAAQ;AADF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AAEA;AACA;;AAEA;AACA,mDAAmD,SAAS;;AAE5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,mDAAmD,SAAS;;AAE5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS;AACT;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAmB;AAChC;AACA;AACA;;AAEA,aAAa,kBAAkB;AAC/B;;AAEA;AACA,KAAK;;AAEL,6BAA6B,aAAa,EAAE;;AAE5C;AACA;;AAEA,yBAAyB,kBAAkB,EAAE;;AAE7C;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,sBAAsB,YAAY;;AAElC;;AAEA;;AAEA,uBAAuB,aAAa;;AAEpC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,mDAAmD,SAAS;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;;AAEA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA,KAAK;;AAEL;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;;AAEA,iBAAiB;;AAEjB,aAAa;AACb;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA,gDAAgD;;AAEhD;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA,yCAAyC;AACzC;AACA;;AAEA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,OAAO;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,wBAAwB;AACxD,gCAAgC,wBAAwB;;AAExD,wBAAwB,8CAA8C;AACtE,wBAAwB,8CAA8C;;AAEtE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;ACjjBA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8ececcb2e72fab9f4708","import { LevelBlock } from 'core/object'\n\n// Utility Functions\nexport function randomIntFromRange(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\nexport const getCanvasEl = function() {\n  const canvas = document.querySelector('canvas')\n  canvas.width = innerWidth\n  canvas.height = innerHeight\n  return canvas\n}\n\nexport const getRandomNum = (min, max) => {\n  return Math.floor(Math.random() * max - min) + min\n}\n\nexport function randomColor(colors) {\n  return colors[Math.floor(Math.random() * colors.length)]\n}\n\nexport function distance(x1, y1, x2, y2) {\n  const xDist = x2 - x1\n  const yDist = y2 - y1\n\n  return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2))\n\n}\n\nexport const lvlBlockFactory = (blockType, i, j) => {\n  const colors = ['grey', 'green', 'blue']\n  let size = { w: 50, h: 50 }\n  return new LevelBlock({\n    color: colors[blockType],\n    position: {\n      x: size.w * j,\n      y: size.h * i,\n    },\n    rect: {\n      ...size,\n    },\n  })\n}\n\nexport const debounce = function(f, ms, context = {}) {\n  let timer = null\n  return function (...args) {\n    const onComplete = () => {\n      console.log(args)\n      f.apply(context, args)\n      timer = null\n    }\n\n    if (timer) {\n      clearTimeout(timer)\n    }\n\n    timer = setTimeout(onComplete, ms)\n  };\n}\n\n\nexport const throttle = function(func, ms, ctx) {\n\n  var isThrottled = false,\n    savedArgs,\n    savedThis;\n\n  function wrapper() {\n\n    if (isThrottled) { // (2)\n      savedArgs = arguments;\n      savedThis = this;\n      return;\n    }\n\n    func.apply(ctx, arguments); // (1)\n\n    isThrottled = true;\n\n    setTimeout(function() {\n      isThrottled = false; // (3)\n      if (savedArgs) {\n        wrapper.apply(savedThis, savedArgs);\n        savedArgs = savedThis = null;\n      }\n    }, ms);\n  }\n\n  return wrapper;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils.js","import {throttle, getRandomNum, distance} from 'lib/utils'\nimport { CommandQueue } from 'lib/command'\nimport {StackFSM} from 'core/fsm'\nimport Victor from 'victor'\nimport knn from 'rbush-knn'\n\n/**\n * TODO: Move to utils\n * Проверяет столкнулись ли два прямоугольника\n * @param  {BaseObject} a \n * @param  {BaseObject} b \n * @return {Boolean} - результат (столкнулись ли они?)\n */\nconst checkCollision = function(a, b) {\n  let res = false\n  if (a.x < b.x + b.w  && a.x + a.w  > b.x &&\n    a.y < b.y + b.h && a.y + a.h > b.y) {\n    res = true\n  }\n  return res\n}\n\nclass BaseObject {\n\n  velocity = 300\n  life = 100\n\n  display = true\n\n  state = {\n    moving: false\n  }\n\n  direction = {\n    up: false,\n    down: false,\n    left: false,\n    right:false,\n  }\n\n  get x() {\n    return this.position.x\n  }\n\n  get y() {\n    return this.position.y\n  }\n\n  get minX() {\n    return this.position.x\n  }\n\n  get minY() {\n    return this.position.y\n  }\n\n  get maxX() {\n    return this.position.x + this.w\n  }\n\n  get maxY() {\n    return this.position.x + this.h\n  }\n\n  dirVec = new Victor(0, 0)\n\n  constructor(options) {\n    let {color, position, rect, remove } = options\n    this.color = color\n    if (typeof(remove) === 'function') {\n      this.remove = remove.bind(this)\n    }\n    this.position = position || new Victor(0, 0)\n    if (!rect) {\n      rect = this.getDefaultSize()\n    }\n    this.rect = rect\n    const { w, h } = rect\n    if (w && h) {\n      this.w = w\n      this.h = h\n    }\n    this.queue = new CommandQueue(this)\n  }\n\n  remove() {\n    // empty\n  }\n\n  getDefaultSize() {\n    return {\n      w: 40,\n      h: 40\n    }\n  }\n\n  getRect() {\n    return this.rect\n  }\n\n  getPosition() {\n    return this.position\n  }\n\n  setRect(rect) {\n    this.rect = rect\n  }\n\n  setPosition(position) {\n    this.position = position\n  }\n\n  setDirection(dir) {\n    this.dirVec.x = dir.x\n    this.dirVec.y = dir.y\n    this.onUpdateDirection()\n  }\n\n  onUpdateDirection() {\n\n  }\n\n  update() {\n    if (this.life <= 0) {\n      this.remove()\n    }\n    if (this.queue.length) {\n      this.queue.update()\n    }\n    this.onUpdate()\n  }\n\n  onUpdate() {\n  }\n\n  onRender() {\n  }\n\n  draw() {\n    if (!this.display)\n      return false\n    const c = game.getCtx()\n    c.beginPath()\n    c.rect(\n      this.position.x,\n      this.position.y,\n      this.w,\n      this.h\n    )\n    c.fillStyle = this.color\n    c.fill()\n    c.closePath()\n    this.onRender()\n  }\n\n  hide() {\n    this.display = false\n  }\n\n  show() {\n    this.display = true\n  }\n\n  destroy() {\n    this.hide()\n  }\n\n  moveBy() {\n    const dt = game.getDt()\n    const step = this.velocity * dt\n    if (this.direction.up) {\n      this.position.y -= step\n    }\n    if (this.direction.down) {\n      this.position.y += step\n    }\n    if (this.direction.left) {\n      this.position.x -= step\n    }\n    if (this.direction.right) {\n      this.position.x += step\n    }\n  }\n\n  move(dir) {\n    const dt = game.getDt()\n    const stepX = (this.velocity * dt) * dir.x\n    const stepY = (this.velocity * dt) * dir.y\n    this.position.x += stepX\n    this.position.y += stepY\n  }\n\n  moveTo(vec) {\n    const dt = game.getDt()\n    const x = this.position.x \n    const y = this.position.y\n\n    /** Init */\n\n    if (!this.state.movement) {\n      const startX = x\n      const startY = y\n      const endX = vec.x\n      const endY = vec.y\n      const distance = Math.sqrt(\n        Math.pow(endX - startX, 2) + \n        Math.pow(endY - startY, 2),\n      )\n\n      let directionX = Math.round((endX - startX) / distance)\n      let directionY = Math.round((endY - startY) / distance)\n\n      const data = {\n        endX,\n        endY,\n        startX,\n        startY,\n        distance,\n        directionX,\n        directionY,\n      }\n\n      this.state.movement = data\n      this.dirVec.x = directionX\n      this.dirVec.y = directionY\n    }\n\n    /** Update */\n\n    if (this.state.movement) {\n      const {\n        endX, endY, \n        startX, startY, \n        directionX, directionY,\n        distance\n      } = this.state.movement\n\n      this.position.x += directionX * this.velocity * dt\n      this.position.y += directionY * this.velocity * dt\n\n      const remainDistance = Math.sqrt(\n        Math.pow(x - startX, 2) +\n        Math.pow(y - startY, 2)\n      )\n\n      if (remainDistance >= distance) {\n        this.position.x = endX\n        this.position.y = endY\n        this.state.movement = false\n      }\n    }\n\n  }\n\n}\n\nexport class LevelBlock extends BaseObject {\n\n  constructor(options) {\n    super(options)\n  }\n\n}\n\nexport class Bullet extends BaseObject {\n\n  velocity = 500\n  lifeTime = 5 // sec\n  damage = 25\n  type = 'single'\n  collided = false\n\n  constructor(options) {\n    super(options)\n    this.owner = options.owner\n    setTimeout(() => {\n      this.outdate = true\n    }, this.lifeTime * 1000)\n  }\n\n  onHit() {\n    // TODO implement\n  }\n\n  onMiss() {\n    // TODO implement\n  }\n\n  onUpdate() {\n    this.move(this.dirVec)\n    const results = knn(game.tree, this.position.x, this.position.y, 3)\n    results.forEach((target, idx) => {\n      if (this !== target && this.owner !== target) {\n        if (checkCollision(this, target)) {\n          if (!this.collided) {\n            this.collided = true\n            if (target && typeof target.damage === 'function') {\n              target.damage(this.damage, this.type)\n            }\n          }\n        }\n      }\n    })\n  }\n\n}\n\nexport class Tank extends BaseObject {\n\n  life = 100\n  bullets = 5\n  velocity = 35\n  tower_angle = 180\n  tower_velocity = 2\n  bulletbuffer = []\n\n  components = []\n  gunDirection = new Victor(0, 0)\n\n  constructor(options) {\n    super(options)\n    const { color, headColor, gunColor } = options\n    this.color = color || '#4691ff'\n    this.radius = this.w *  2\n    this.headColor = headColor || 'black'\n    this.gunColor = gunColor || 'white'\n    this.restore = false\n    this.setGunAngle()\n  }\n\n  damage(val, type) {\n    if (this.life > 0) {\n      this.life -= val\n    } else {\n      this.life = 0\n    }\n  }\n\n  setGunAngle() {\n    this.gunAngle = 90\n  }\n\n  setHeadColor(color) {\n    this.headColor = color\n  }\n\n  addComponent(tankComponent) {\n    this.components.push(tankComponent)\n  }\n\n  removeComponent(tankComponent) {\n    const idx = this.components.indexOf(tankComponent)\n    if (idx > -1)\n      this.components.splice(idx, 1)\n  }\n\n  initPlayer() {\n    this.enableControls()\n    this.player = true\n  }\n\n  showReloadText() {\n    const c = game.getCtx()\n    const text = `Reloading...`\n    c.fillStyle = 'black'\n    c.font = '14px Helvetica'\n    c.fillText(text, innerWidth / 2, innerHeight / 2)\n  }\n\n  updateComponents() {\n    this.components.forEach((component) => {\n      component.update()\n    })\n  }\n\n  drawHealthBar(x, y) {\n    const hp = `hp: ${this.life}`\n    const c = game.getCtx()\n    c.fillStyle = 'black'\n    c.font = '18px Helvetica'\n    c.fillText(hp, x, y)\n  }\n\n  drawBulletCountLabel(x, y) {\n    const count = this.bullets\n    const labelTxt = `Bullets: ${count}`\n    const c = game.getCtx()\n    c.fillStyle = 'black'\n    c.font = '18px Helvetica'\n    c.fillText(labelTxt, x, y)\n  }  \n\n  // ADD fire MIXIN\n  fire() {\n    const time = Date.now()\n    if (this.bullets === 0) {\n      this.state.reloading = true\n      return false\n    }\n\n    const directionY = this.dirVec.y > 0 || this.dirVec.y < 0\n\n    const bullet = new Bullet({\n      rect: directionY ? { w: 3, h: 8 } : { w: 8, h: 3 },\n      color: 'red',\n      owner: this,\n    })\n\n    bullet.dirVec = {...this.dirVec}\n    bullet.setPosition(\n      new Victor(\n        this.gunDirection.x,\n        this.gunDirection.y\n      )\n    )\n\n    bullet.state.moving = true\n    this.bulletbuffer.push(bullet)\n    game.tree.insert(bullet)\n    this.bullets--\n  }\n\n  moveGun(keys) {\n    // LEFT, RIGHT\n    if (keys.right) {\n      // TODO USE TRIGONOMETRY\n      this.tower_angle += tower_velocity\n    }\n    if (keys.left) {\n      // TODO USE TRIGONOMETRY\n      this.tower_angle -= tower_velocity\n    }\n  }\n\n  updateBullets() {\n    this.bulletbuffer.forEach((bullet, idx) => {\n      if (bullet.outdate || bullet.collided) {\n        game.tree.remove(bullet)\n        this.bulletbuffer.shift()\n      } else {\n        bullet.update()\n      }\n    })\n    if (this.bullets <= 0 && !this.state.reloading) {\n      this.state.reloading = true\n      setTimeout(() => {\n        this.bullets += 5\n        this.state.reloading = false\n      }, 1500)\n    }\n  }\n\n  drawGun(c) {\n    const { x, y } = this.dirVec\n    if (x === 0 && y === -1) {\n      this.gunAngle = 270\n    } else if (x === 0 && y === 1) {\n      this.gunAngle = 90\n    } else if (x === 1 && y === 0) {\n      this.gunAngle = 0\n    } else if (x === -1 & y === 0) {\n      this.gunAngle = 180\n    }\n    const radian = Math.PI / 180 * this.gunAngle\n    this.headHalfWidth = this.headWidth / 2\n    this.headHalfHeight = this.headHeight / 2\n    this.gunPosition = new Victor(\n      this.headX + this.headHalfWidth,\n      this.headY + this.headHalfWidth\n    )\n    const length = this.radius / 3\n    const x1 = this.headX + this.headHalfWidth + length * Math.cos(radian)\n    const y1 = this.headY + this.headHalfHeight + length * Math.sin(radian)\n    this.gunDirection.x = x1\n    this.gunDirection.y = y1\n    c.beginPath()\n    c.strokeStyle = this.gunColor\n    c.moveTo(this.gunPosition.x, this.gunPosition.y)\n    c.lineTo(x1, y1)\n    c.lineWidth = 2\n    c.stroke()\n    c.lineWidth = 1\n    c.closePath()\n  }\n\n  drawHead(c) {\n    const margin = 30\n    this.headX = this.x + margin / 2\n    this.headY = this.y + margin / 2\n    this.headWidth = this.w - margin\n    this.headHeight = this.h - margin\n    c.beginPath()\n    c.fillStyle = this.headColor\n    c.fillRect(\n      this.headX,\n      this.headY, \n      this.headWidth,\n      this.headHeight\n    )\n    c.closePath()\n  }\n\n  drawBody(c) {\n    c.beginPath()\n    c.rect(\n      this.position.x,\n      this.position.y,\n      this.w,\n      this.h\n    )\n    c.fillStyle = this.color\n    c.fill()\n    c.closePath()    \n  }\n\n  draw() {\n    if (!this.display)\n      return false\n    const c = game.getCtx()\n    this.drawBody(c)\n    this.drawHead(c)\n    this.drawGun(c)\n    this.onRender()\n  }\n\n  onRender() {\n    if (this.player) {\n      const bulletLabelX = innerWidth - 80\n      const bulletLabelY = innerHeight - 10\n      this.drawBulletCountLabel(bulletLabelX, bulletLabelY)\n      this.drawHealthBar(5, innerHeight - 10)\n    }\n    if (this.state.reloading && this.player) {\n      this.showReloadText()\n    }\n    this.bulletbuffer.forEach((b) => {\n      b.draw()\n    })\n  }\n\n  onUpdate() {\n    this.moveBy()\n    this.updateBullets()\n    this.updateComponents()\n  }\n\n  onKeyPress(directionName, type) {\n    const pressed = type === 'keydown' ? true : false\n    this.direction[directionName] = pressed ? true : false\n  }\n\n  enableControls() {\n    const events = ['keydown', 'keyup']\n    const listener = (e) => {\n      const { keyCode, type } = e\n      const directions = {\n        38: {\n          name: 'up',\n          vec: new Victor(0, -1),\n          axis: 'y',\n        },\n        40: {\n          name: 'down',\n          vec: new Victor(0, 1),\n          axis: 'y',\n        },\n        37: {\n          name: 'left',\n          vec: new Victor(-1, 0),\n          axis: 'x',\n        },\n        39: {\n          name: 'right',\n          vec: new Victor(1, 0),\n          axis: 'x',\n        }\n      }\n      const direction = directions[keyCode]\n      if (direction) {\n        const { name, vec, axis } = direction\n        this.dirVec = vec\n        this.onKeyPress(name, type)\n      }\n      if (keyCode === 32 && type === 'keyup') {\n        if (!this.state.reloading) {\n          if (!this.lastFireTime) {\n            this.lastFireTime = game.lastLoopTime\n          }\n          if (game.lastLoopTime - this.lastFireTime > 1000) {\n            this.fire()\n            this.lastFireTime = null\n          }\n        }\n      }\n    }\n    events.forEach((name) => {\n      addEventListener(name, listener)\n    })\n  }\n}\n\nexport class EnemyTank extends Tank {\n\n  velocity = 50\n  scanRange = 600\n  unit = true\n\n  // add commands stack\n  // if we have command in stack\n  // and this command have some state\n  // pop stack command and apply state\n\n  constructor(options) {\n    super(options)\n    this.fsm = new StackFSM()\n    this.initCPU()\n    this.scanner = throttle(this.scanLine, 1000, this)\n  }\n\n  initCPU() {\n    this.cpu = true\n    setTimeout(() => {\n      this.fsm.pushState(() => this.stateScout())\n    }, getRandomNum(1, 5) * 1000)\n  }\n\n  onUpdate() {\n    this.updateBullets()\n    this.fsm.update()\n  }\n\n  scanLine() {\n    console.log(Date.now())\n  }\n\n  stateChangeWeapon(type, nextState) {\n    // changes weapon type\n    // for next attack\n  }\n\n  stateMoveTo(position, nextState) {\n    // moveTo position\n    // use pathfinding algorythm\n    // when got position\n    // pushNextState\n  }\n\n  stateAvoidAttack() {\n    // while beign in stateScout\n    // if enemy bullet is detected on line\n    // change line\n    // if enemy not detected fire in same direction\n    // if enemy detected fire at enemy\n    // if hp is low runAway\n  }\n\n  stateAttack() {\n    // if enemy detected\n    // fire at enemy position\n    // then scan for enemy bullet attacks\n    // if bullets detected avoid attacks\n    // if no bullets change position (UP, TOP, LEFT, RIGHT)\n  }\n\n  stateDoGroup() {\n    // find free group of objects\n    // join\n    // listen to group ai commands\n\n    // group features:\n\n    // positions - few objects can stay in Positions\n\n    // position - triangle\n    //  t t\n    // t t t\n    //  t t\n\n    // position - square\n    // t t t t\n    // t t t t\n    // t t t t\n\n    // group commands\n    // objects can order commands\n\n    // regroup - group idx will be resorted\n    // after that objects handle moveTo(position)\n    // attackAll - all at one direction\n    // all objects will attack at one direction\n\n    // attackSquarePosition - each obj attack in one point\n    // of squared space\n\n    // holdposition - objects will hold different positions\n    // for n times of attacks\n\n    // scanSquare - each objects will scan for enemy\n    // if enemy is attack - save direction X OR Y\n    // make scanSquare results with array of lines\n    // trigger next state of GroupController\n    // attackSquarePosition\n    //\n    // heal(obj) or repair - if obj type can heal\n    // it will heal other obj\n    // it will push stateRepair(obj)\n    //\n    // defend(obj)\n    // will cover building with some around positions\n    //\n    //\n  }\n\n  stateScout() {\n    if (!this.queue.length) {\n      const num = getRandomNum(3, 4) + 1\n      const range = getRandomNum(50, 100) + 1\n      this.queue.push('moveTo', -1 * range * num, 1, true)\n      this.queue.push('moveTo', 1 * range * num, 1, true)\n    }\n\n    // Логика разведки должна быть следующая \n    // \n    // Поведение - 1. Поиск противника\n    //\n    // 1) Просмотр по текущему направлению объекта вперед на n meters\n    // 2) Если объект не найден проехать n meters\n    // 3) Просканировать снова\n    // 4) Если не найден - сменить направление объекта. (Зациклить данное поведение)\n    //\n    //\n    // Поведение - 2. Противник был замечен n сек назад. Поиск в той-же области\n    // плюс атака на угад. \n    //\n    // 1) Продвинуться в сторону противника.\n    //  \n    //  Атаковать на ходу в сторону противника\n    //  Если противник ушел с линии найти его\n    //   И атаковать.\n    //  \n    //  2) Стрелять наперед - на несколько пунктов вверх по x, y\n    //\n    //\n    //\n\n    // TODO refactor\n    // add timer object\n    // use timer object\n    if (!this.lastScoutScan) {\n      this.lastScoutScan = game.lastLoopTime / 1000\n    }\n    // TODO refactor\n    // add new variables for elapsed time\n    // minutes\n    // seconds\n    // hours\n    if (game.lastLoopTime / 1000 - this.lastScoutScan > 1.5) {\n      knn(game.tree, this.x, this.y, 10).map((obj) => {\n        // TODO refactor\n        // add method to util isDirectionTheSame\n        if (obj.player) {\n          const fov = 100\n          const sameDirectionX = obj.x < this.x && this.dirVec.x == -1\n            || obj.x > this.x && this.dirVec.x == -1\n          const sameDirectionY = obj.y < this.y && this.dirVec.y == 1\n            || obj.y > this.y && this.dirVec.y == 1\n          const closerToY = this.y - fov < obj.y && this.y + fov > obj.y\n          const closerToX = this.x - fov < obj.x && this.x + fov > obj.y\n          if (sameDirectionX && closerToY || sameDirectionY && closerToX) {\n            // TODO add weapon queue\n            this.fire()\n            const newX = this.dirVec.x * (obj.x / 10)\n            const newY = 0\n            this.queue.push('moveTo', newX, newY, true)\n          }\n        }\n      })\n      this.lastScoutScan = null\n    }\n  }\n}\n\nexport class Enemy {\n\n  // Tower class will inherit this cls\n\n  // towers features:\n  //\n  // autocapture\n  // if enemy in scan radius\n  // it captures enemy position in realtime updates\n  //\n  // autofire\n  //\n  // it can autofire if enemy captured\n  //\n  // helpSignal\n  //\n  // it can scan for friendly objects\n  // to defence self\n  //\n  // enemy group will be cover tower\n  //\n\n}\n\nclass Soldier extends Enemy {\n\n  // add pathfinding behavior\n  // add fire behavior\n  // add repair behavior\n  // add group behavior\n  //\n\n  // features\n  //\n  // weapons\n  //\n  // granade:\n  //\n  // bazuka:\n  //\n  // skills:\n  //\n  // repair tank\n  //\n  // add mine\n  //\n  // use artillery\n  //\n  // it will handle free artillery\n  // artillery object has own behavior\n  //\n\n}\n\nclass Sniper extends Soldier {\n\n  // add enchantent skill behavior\n\n  // features\n  //\n  // skills:\n  //\n  // longshoot - anti-armor attack with long reload time\n  //\n  // captureEnemy - captures enemy with laser\n\n}\n\n// TODO add fire types\n//\n//\n// At one line\n//\n// single - one shoot in 1 sec\n//\n// multiple - two shoots in 1 sec\n//\n// triple - 3 shoots in 1 sec\n//\n// laser - one shoot in 3 secs\n//\n// At two lines\n//\n// single\n//\n// laser\n//\n// RocketAOE\n//\n// aoe rocket - fires down squared space 2x2\n//\n// Rocket Auto-target\n//\n// launch rocket that will be hit at enemy\n// bahavior:\n//\n// if it hit closer to enemy at 10px nearly\n// it will reduce enemy hp with full damage\n//\n// if it hit closer to enemy > 10px\n// it will has chance to hit 50/50 and damage reduced by 50%\n//\n//\n// Attack with angle direction at Time\n//\n// if object has captured enemy position and moving\n// it will be attack at enemy position with some angle direction\n//\n\n\n// TODO Separate enemy states\n//\n// fsm for movement, change positions\n// will have states:\n// state.movement\n// state.holdPosition\n// state.attackingAtPosition\n// state.hasNoPosition\n// state.inGroup\n// state.runaway\n// state.attacking\n// state.repairing\n//\n//\n\n// TODO Tank Behavior enchantments:\n//\n// 1) With low hp movement speed is reduced\n// 2) Tank can by three of types:\n//\n// Lightweight - small size\n// has much movement speed low dmg\n//\n// MiddleEnd - normal size\n// has normal speed, normal dmg\n//\n// HeavyTank - big size\n// has slow movenet speed, big dmg, long reloading\n//\n\n// TODO add armor entity\n//\n// armor logic\n//\n// if armor easy\n//\n// if weapon heavy - it will hit lightweight armor by 200% dmg\n// if weapon normal - it will hit lightweight armor by 150% dmg\n// if weapon easy - it will hit lightweight armor by 80-100% dmg\n//\n// if armor heavy\n// weapon normal hit this armor by 60-80% dmg\n// weapon heavy hit this armor by 100% dmg\n// weapon easy hit this armor by 30-40% dmg\n//\n// if armor normal\n// weapon normal hit this armor by 100% dmg\n// weapon heavy hit this armor by 150% dmg\n// weapon easy hit his armor by 60-80% dmg\n//\n//\n\n// NOTE\n// Tower will have heavy armor type\n// Soldiers, Snipers will have easy armor type\n// Tank - will have normal armor type\n// HeavyTank - will have heavy armor type\n//\n\n// NOTE\n//\n// TankTypes\n//\n// Speed lightweight (lvl 1 - 5)\n// Lightweight scout (lvl 1 - 5)\n// Normal (lvl 1 - 5)\n// Heavy (lvl 1 - 5)\n// Boss (lvl 1 -5)\n//\n\n// TOWER TYPES\n//\n// RADAR Type - can capture enemy position for long range\n//\n// DEFEND Type - can attack enemies\n//\n// SUPPORT TYPE - can repair nearby objects\n//\n// BASE TYPE - if it will be destroyed - gameover\n//\n//\n\n\n// NOTE DESTROY OF TANKS BEHAVIOR\n//\n// drop loot\n// - enchatments\n// - gold\n// - bomb\n// - mine\n//\n//\n\n// TANK PLAYER SKILLS\n//\n// toggleWeaponType\n// reloadWeaponBullets\n// buyFriendTank - if stay near with base building\n// buyFriendSoldier - if stay near with base building\n// repair - if stay with mechanics building or has repair item\n// pickup object - pick enchatment or gold\n// pickup gold - auto behavior will pick up nearly gold automated\n//\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/object.js","exports = module.exports = Victor;\n\n/**\n * # Victor - A JavaScript 2D vector class with methods for common vector operations\n */\n\n/**\n * Constructor. Will also work without the `new` keyword\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = Victor(42, 1337);\n *\n * @param {Number} x Value of the x axis\n * @param {Number} y Value of the y axis\n * @return {Victor}\n * @api public\n */\nfunction Victor (x, y) {\n\tif (!(this instanceof Victor)) {\n\t\treturn new Victor(x, y);\n\t}\n\n\t/**\n\t * The X axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.x;\n\t *     // => 42\n\t *\n\t * @api public\n\t */\n\tthis.x = x || 0;\n\n\t/**\n\t * The Y axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.y;\n\t *     // => 21\n\t *\n\t * @api public\n\t */\n\tthis.y = y || 0;\n};\n\n/**\n * # Static\n */\n\n/**\n * Creates a new instance from an array\n *\n * ### Examples:\n *     var vec = Victor.fromArray([42, 21]);\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromArray\n * @param {Array} array Array with the x and y values at index 0 and 1 respectively\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromArray = function (arr) {\n\treturn new Victor(arr[0] || 0, arr[1] || 0);\n};\n\n/**\n * Creates a new instance from an object\n *\n * ### Examples:\n *     var vec = Victor.fromObject({ x: 42, y: 21 });\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromObject\n * @param {Object} obj Object with the values for x and y\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromObject = function (obj) {\n\treturn new Victor(obj.x || 0, obj.y || 0);\n};\n\n/**\n * # Manipulation\n *\n * These functions are chainable.\n */\n\n/**\n * Adds another vector's X axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addX(vec2);\n *     vec1.toString();\n *     // => x:30, y:10\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addX = function (vec) {\n\tthis.x += vec.x;\n\treturn this;\n};\n\n/**\n * Adds another vector's Y axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addY(vec2);\n *     vec1.toString();\n *     // => x:10, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addY = function (vec) {\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds another vector to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.add(vec2);\n *     vec1.toString();\n *     // => x:30, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.add = function (vec) {\n\tthis.x += vec.x;\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to both vector axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalar(2);\n *     vec.toString();\n *     // => x: 3, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalar = function (scalar) {\n\tthis.x += scalar;\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the X axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarX(2);\n *     vec.toString();\n *     // => x: 3, y: 2\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarX = function (scalar) {\n\tthis.x += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarY(2);\n *     vec.toString();\n *     // => x: 1, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarY = function (scalar) {\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the X axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractX(vec2);\n *     vec1.toString();\n *     // => x:80, y:50\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractX = function (vec) {\n\tthis.x -= vec.x;\n\treturn this;\n};\n\n/**\n * Subtracts the Y axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractY(vec2);\n *     vec1.toString();\n *     // => x:100, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractY = function (vec) {\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtract(vec2);\n *     vec1.toString();\n *     // => x:80, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtract = function (vec) {\n\tthis.x -= vec.x;\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalar(20);\n *     vec.toString();\n *     // => x: 80, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalar = function (scalar) {\n\tthis.x -= scalar;\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarX(20);\n *     vec.toString();\n *     // => x: 80, y: 200\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarX = function (scalar) {\n\tthis.x -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarY(20);\n *     vec.toString();\n *     // => x: 100, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarY = function (scalar) {\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Divides the X axis by the x component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.divideX(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideX = function (vector) {\n\tthis.x /= vector.x;\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.divideY(vec2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideY = function (vector) {\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by a axis values of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.divide(vec2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Victor} vector The vector to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divide = function (vector) {\n\tthis.x /= vector.x;\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalar(2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalar = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t}\n\n\treturn this;\n};\n\n/**\n * Divides the X axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarX(2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarX = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarY(2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarY = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.y = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Inverts the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertX();\n *     vec.toString();\n *     // => x:-100, y:50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertX = function () {\n\tthis.x *= -1;\n\treturn this;\n};\n\n/**\n * Inverts the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertY();\n *     vec.toString();\n *     // => x:100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertY = function () {\n\tthis.y *= -1;\n\treturn this;\n};\n\n/**\n * Inverts both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invert();\n *     vec.toString();\n *     // => x:-100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invert = function () {\n\tthis.invertX();\n\tthis.invertY();\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by X component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyX = function (vector) {\n\tthis.x *= vector.x;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by Y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyY = function (vector) {\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by values from a given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.multiply(vec2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Victor} vector The vector to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiply = function (vector) {\n\tthis.x *= vector.x;\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalar(2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Number} The scalar to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalar = function (scalar) {\n\tthis.x *= scalar;\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarX(2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarX = function (scalar) {\n\tthis.x *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarY(2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarY = function (scalar) {\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Normalize\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.normalize = function () {\n\tvar length = this.length();\n\n\tif (length === 0) {\n\t\tthis.x = 1;\n\t\tthis.y = 0;\n\t} else {\n\t\tthis.divide(Victor(length, length));\n\t}\n\treturn this;\n};\n\nVictor.prototype.norm = Victor.prototype.normalize;\n\n/**\n * If the absolute vector axis is greater than `max`, multiplies the axis by `factor`\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.limit(80, 0.9);\n *     vec.toString();\n *     // => x:90, y:50\n *\n * @param {Number} max The maximum value for both x and y axis\n * @param {Number} factor Factor by which the axis are to be multiplied with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.limit = function (max, factor) {\n\tif (Math.abs(this.x) > max){ this.x *= factor; }\n\tif (Math.abs(this.y) > max){ this.y *= factor; }\n\treturn this;\n};\n\n/**\n * Randomizes both vector axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomize(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:67, y:73\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomize = function (topLeft, bottomRight) {\n\tthis.randomizeX(topLeft, bottomRight);\n\tthis.randomizeY(topLeft, bottomRight);\n\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeX(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:55, y:50\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeX = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.x, bottomRight.x);\n\tvar max = Math.max(topLeft.x, bottomRight.x);\n\tthis.x = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeY(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:100, y:66\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeY = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.y, bottomRight.y);\n\tvar max = Math.max(topLeft.y, bottomRight.y);\n\tthis.y = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomly randomizes either axis between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeAny(new Victor(50, 60), new Victor(70, 80));\n *     vec.toString();\n *     // => x:100, y:77\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeAny = function (topLeft, bottomRight) {\n\tif (!! Math.round(Math.random())) {\n\t\tthis.randomizeX(topLeft, bottomRight);\n\t} else {\n\t\tthis.randomizeY(topLeft, bottomRight);\n\t}\n\treturn this;\n};\n\n/**\n * Rounds both axis to an integer value\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.unfloat = function () {\n\tthis.x = Math.round(this.x);\n\tthis.y = Math.round(this.y);\n\treturn this;\n};\n\n/**\n * Rounds both axis to a certain precision\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @param {Number} Precision (default: 8)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.toFixed = function (precision) {\n\tif (typeof precision === 'undefined') { precision = 8; }\n\tthis.x = this.x.toFixed(precision);\n\tthis.y = this.y.toFixed(precision);\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the X axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixX(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:100\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixX = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.x = (1 - amount) * this.x + amount * vec.x;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the Y axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixY(vec2, 0.5);\n *     vec.toString();\n *     // => x:100, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixY = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.y = (1 - amount) * this.y + amount * vec.y;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mix(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mix = function (vec, amount) {\n\tthis.mixX(vec, amount);\n\tthis.mixY(vec, amount);\n\treturn this;\n};\n\n/**\n * # Products\n */\n\n/**\n * Creates a clone of this vector\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = vec1.clone();\n *\n *     vec2.toString();\n *     // => x:10, y:10\n *\n * @return {Victor} A clone of the vector\n * @api public\n */\nVictor.prototype.clone = function () {\n\treturn new Victor(this.x, this.y);\n};\n\n/**\n * Copies another vector's X component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyX(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:10\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyX = function (vec) {\n\tthis.x = vec.x;\n\treturn this;\n};\n\n/**\n * Copies another vector's Y component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyY(vec1);\n *\n *     vec2.toString();\n *     // => x:10, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyY = function (vec) {\n\tthis.y = vec.y;\n\treturn this;\n};\n\n/**\n * Copies another vector's X and Y components in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copy(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copy = function (vec) {\n\tthis.copyX(vec);\n\tthis.copyY(vec);\n\treturn this;\n};\n\n/**\n * Sets the vector to zero (0,0)\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *\t\t var1.zero();\n *     vec1.toString();\n *     // => x:0, y:0\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.zero = function () {\n\tthis.x = this.y = 0;\n\treturn this;\n};\n\n/**\n * Calculates the dot product of this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.dot(vec2);\n *     // => 23000\n *\n * @param {Victor} vector The second vector\n * @return {Number} Dot product\n * @api public\n */\nVictor.prototype.dot = function (vec2) {\n\treturn this.x * vec2.x + this.y * vec2.y;\n};\n\nVictor.prototype.cross = function (vec2) {\n\treturn (this.x * vec2.y ) - (this.y * vec2.x );\n};\n\n/**\n * Projects a vector onto another vector, setting itself to the result.\n *\n * ### Examples:\n *     var vec = new Victor(100, 0);\n *     var vec2 = new Victor(100, 100);\n *\n *     vec.projectOnto(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want to project this vector onto\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.projectOnto = function (vec2) {\n    var coeff = ( (this.x * vec2.x)+(this.y * vec2.y) ) / ((vec2.x*vec2.x)+(vec2.y*vec2.y));\n    this.x = coeff * vec2.x;\n    this.y = coeff * vec2.y;\n    return this;\n};\n\n\nVictor.prototype.horizontalAngle = function () {\n\treturn Math.atan2(this.y, this.x);\n};\n\nVictor.prototype.horizontalAngleDeg = function () {\n\treturn radian2degrees(this.horizontalAngle());\n};\n\nVictor.prototype.verticalAngle = function () {\n\treturn Math.atan2(this.x, this.y);\n};\n\nVictor.prototype.verticalAngleDeg = function () {\n\treturn radian2degrees(this.verticalAngle());\n};\n\nVictor.prototype.angle = Victor.prototype.horizontalAngle;\nVictor.prototype.angleDeg = Victor.prototype.horizontalAngleDeg;\nVictor.prototype.direction = Victor.prototype.horizontalAngle;\n\nVictor.prototype.rotate = function (angle) {\n\tvar nx = (this.x * Math.cos(angle)) - (this.y * Math.sin(angle));\n\tvar ny = (this.x * Math.sin(angle)) + (this.y * Math.cos(angle));\n\n\tthis.x = nx;\n\tthis.y = ny;\n\n\treturn this;\n};\n\nVictor.prototype.rotateDeg = function (angle) {\n\tangle = degrees2radian(angle);\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateTo = function(rotation) {\n\treturn this.rotate(rotation-this.angle());\n};\n\nVictor.prototype.rotateToDeg = function(rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateTo(rotation);\n};\n\nVictor.prototype.rotateBy = function (rotation) {\n\tvar angle = this.angle() + rotation;\n\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateByDeg = function (rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateBy(rotation);\n};\n\n/**\n * Calculates the distance of the X axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceX(vec2);\n *     // => -100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceX = function (vec) {\n\treturn this.x - vec.x;\n};\n\n/**\n * Same as `distanceX()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.absDistanceX(vec2);\n *     // => 100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceX = function (vec) {\n\treturn Math.abs(this.distanceX(vec));\n};\n\n/**\n * Calculates the distance of the Y axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => -10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceY = function (vec) {\n\treturn this.y - vec.y;\n};\n\n/**\n * Same as `distanceY()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => 10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceY = function (vec) {\n\treturn Math.abs(this.distanceY(vec));\n};\n\n/**\n * Calculates the euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distance(vec2);\n *     // => 100.4987562112089\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distance = function (vec) {\n\treturn Math.sqrt(this.distanceSq(vec));\n};\n\n/**\n * Calculates the squared euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceSq(vec2);\n *     // => 10100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceSq = function (vec) {\n\tvar dx = this.distanceX(vec),\n\t\tdy = this.distanceY(vec);\n\n\treturn dx * dx + dy * dy;\n};\n\n/**\n * Calculates the length or magnitude of the vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.length();\n *     // => 111.80339887498948\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.length = function () {\n\treturn Math.sqrt(this.lengthSq());\n};\n\n/**\n * Squared length / magnitude\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.lengthSq();\n *     // => 12500\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.lengthSq = function () {\n\treturn this.x * this.x + this.y * this.y;\n};\n\nVictor.prototype.magnitude = Victor.prototype.length;\n\n/**\n * Returns a true if vector is (0, 0)\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     vec.zero();\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isZero = function() {\n\treturn this.x === 0 && this.y === 0;\n};\n\n/**\n * Returns a true if this vector is the same as another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(100, 50);\n *     vec1.isEqualTo(vec2);\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isEqualTo = function(vec2) {\n\treturn this.x === vec2.x && this.y === vec2.y;\n};\n\n/**\n * # Utility Methods\n */\n\n/**\n * Returns an string representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toString();\n *     // => x:10, y:20\n *\n * @return {String}\n * @api public\n */\nVictor.prototype.toString = function () {\n\treturn 'x:' + this.x + ', y:' + this.y;\n};\n\n/**\n * Returns an array representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toArray();\n *     // => [10, 20]\n *\n * @return {Array}\n * @api public\n */\nVictor.prototype.toArray = function () {\n\treturn [ this.x, this.y ];\n};\n\n/**\n * Returns an object representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toObject();\n *     // => { x: 10, y: 20 }\n *\n * @return {Object}\n * @api public\n */\nVictor.prototype.toObject = function () {\n\treturn { x: this.x, y: this.y };\n};\n\n\nvar degrees = 180 / Math.PI;\n\nfunction random (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction radian2degrees (rad) {\n\treturn rad * degrees;\n}\n\nfunction degrees2radian (deg) {\n\treturn deg / degrees;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/victor/index.js\n// module id = 2\n// module chunks = 0","import { testLevel1 } from 'core/level'\nimport { getCanvasEl } from 'lib/utils'\n\n// TODO MOVE TO UTILS\nconst drawFPS = function(ctx, value, x, y, color) {\n  ctx.fillStyle = color || 'black'\n  ctx.font = '20px Helvetica'\n  ctx.fillText(Math.round(value), x + 20, y - 5)\n}\n\n// TODO MOVE TO core/game.js\nclass Game {\n\n  maxFps = 100\n\n  listeners = []\n\n  state = {\n    paused: false\n  }\n\n  time = {\n    seconds: 0,\n    minutes: 0,\n    hours: 0,\n  }\n\n  constructor() {\n    this.frameDuration = 1 / this.maxFps\n  }\n\n  pause() {\n    this.state.paused = true\n    this.lastPausedTime = Date.now()\n  }\n\n  play() {\n    this.state.paused = false\n    this.loop()\n  }\n\n  onResize() {\n    // IMPLEMENT\n  }\n\n  onMouseMove() {\n    // IMPLEMENT\n  }\n\n  setCanvasEl(canvas) {\n    if (!canvas) {\n      this.canvasEl = getCanvasEl()\n    }\n    else if (canvasEl) {\n      this.canvasEl = canvasEl\n    }\n  }\n\n  getDt() {\n    return this.dt\n  }\n\n  getCtx() {\n    this.ctx = this.canvasEl.getContext('2d')\n    return this.ctx\n  }\n\n  setContext() {\n    this.ctx = this.getCanvasCtx()\n  }\n\n  addListeners() {\n    // Event Listeners\n    addEventListener('mousemove', event => {\n      mouse.x = event.clientX\n      mouse.y = event.clientY\n    })\n\n    addEventListener('resize', () => {\n      canvas.width = innerWidth\n      canvas.height = innerHeight\n      this.start()\n    })\n  }\n\n  loop() {\n    this.reqId = requestAnimationFrame(() => this.loop())\n    const now = performance.now()\n    if (!this.lastLoopTime) {\n      this.lastLoopTime = now\n      return false\n    }\n    this.dt = (now - this.lastLoopTime) / 1000\n    if (this.dt > this.frameDuration) {\n      this.fps = 1 / this.dt\n      this.update()\n      this.render()\n      this.lastLoopTime = now - (\n        this.dt % this.frameDuration\n      )\n      this.time.seconds = (this.lastLoopTime / 1000).toFixed(2)\n    }\n  }\n\n  update() {\n    if (!this.paused) {\n      this.currentLevel.update(this)\n    }\n  }\n\n  loadLevel(fn) {\n    this.currentLevel = fn(this)\n  }\n\n  render() {\n    const c = this.getCtx()\n    c.clearRect(0, 0, this.canvasEl.width, this.canvasEl.height)\n\n    this.currentLevel.render(this)\n    drawFPS(this.getCtx(), this.fps, innerWidth - 50, 25)\n  }\n\n  start() {\n    if (!this.state.paused)\n      this.play()\n  }\n\n}\n\n// TODO rename file to index.js\n\nconst initTestEnvirotment = function() {\n  const game = window.game = new Game()\n  game.setCanvasEl()\n  game.loadLevel(testLevel1, 'test-1')\n  game.start()\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  initTestEnvirotment()\n})\n\n// TODO READ PERFOMANCE TIPS\n// https://www.html5rocks.com/en/tutorials/canvas/performance/\n\n\n\n// WEBPACK FOOTER //\n// ./src/canvas.js","import { Tank, EnemyTank } from 'core/object'\nimport { Panel } from 'core/ui'\nimport rbush from 'rbush'\nimport Victor from 'victor'\n\nimport {\n  lvlBlockFactory,\n  distance,\n} from 'lib/utils'\n\nconst testLevel1Map = [\n [1,1,1,1,1,1,1,1,1,1,1],\n [1,0,0,0,0,0,0,0,0,0,1],\n [1,0,0,0,0,0,0,0,0,0,1],\n [1,0,0,0,0,0,0,0,0,0,1],\n [1,0,0,0,0,0,0,0,0,0,1],\n [1,0,0,0,0,0,0,0,0,0,1],\n [1,0,0,0,0,0,0,0,0,0,1],\n [1,0,0,0,0,0,0,0,0,0,1],\n [1,0,0,0,0,2,0,0,0,0,1],\n [1,1,1,1,1,1,1,1,1,1,1]\n]\n\nexport const testLevel1 = function(game) {\n  let obj\n\n  const level = Object.create({\n    map: testLevel1,\n    objects: [],\n    game: game,\n  })\n\n  // TODO add to utils\n  const removeFromList = (obj, list) => {\n    const idx = list.indexOf(obj)\n    if (idx > - 1) {\n      list.splice(idx, 1)\n    }\n  }\n\n  const removeObj = function() {\n    removeFromList(this, game.objects)\n    removeFromList(this, level.objects)\n    game.tree.remove(this)\n  }\n\n  level.update = function() {\n    this.objects.forEach((obj) => {\n      obj.update()\n    })\n  }\n\n  level.render = function() {\n    this.objects.forEach((obj) => {\n      obj.draw()\n    })\n  }\n\n  level.testMap = testLevel1Map\n  const rows = level.testMap.length - 1\n  level.rows = rows\n  let tank\n  for (let i = 0; i <= rows; i++) {\n    const cells = level.testMap[i].length - 1\n    level.cells = cells\n    for (let j = 0; j <= cells; j++) {\n      let blockType = level.testMap[i][j]\n      if (blockType === 2) {\n        blockType = 1\n        tank = new Tank({\n          remove: removeObj,\n          color: '#03a9f4',\n          position: new Victor(\n            51 * j, 51 * i\n          ),\n        })\n      }\n      obj = lvlBlockFactory(blockType, i, j)\n      level.objects.push(obj)\n    }\n  }\n\n  const enemyTank = new EnemyTank({\n    remove: removeObj,\n    color: 'green',\n    position: new Victor(\n      innerWidth - 100,\n      innerHeight / 2\n    ),\n  })\n  const enemyTank2 = new EnemyTank({\n    remove: removeObj,\n    color: 'red',\n    position: new Victor(\n      innerWidth - 100,\n      (innerHeight / 2) - 50\n    ),\n  })\n  const enemyTank3 = new EnemyTank({\n    remove: removeObj,\n    color: 'black',\n    headColor: '#03a9f4',\n    position: new Victor(\n      innerWidth - 100,\n      (innerHeight / 2) - 100\n    ),\n  })\n  const enemyTank4 = new EnemyTank({\n    remove: removeObj,\n    color: 'silver',\n    headColor: 'black',\n    position: new Victor(\n      innerWidth - 100,\n      (innerHeight / 2) - 150\n    ),\n  })\n  const enemyTank5 = new EnemyTank({\n    remove: removeObj,\n    color: 'aqua',\n    headColor: 'blue',\n    position: new Victor(\n      innerWidth - 100,\n      (innerHeight / 2) + 150\n    ),\n  })  \n  const enemyTank6 = new EnemyTank({\n    remove: removeObj,\n    color: 'orange',\n    headColor: 'black',\n    position: new Victor(\n      innerWidth - 100,\n      (innerHeight / 2) + 50\n    ),\n  })\n  const enemyTank7 = new EnemyTank({\n    remove: removeObj,\n    color: 'brown',\n    headColor: 'black',\n    position: new Victor(\n      innerWidth - 100,\n      (innerHeight / 2) + 100\n    ),\n  })  \n\n  window.enemyTank = enemyTank\n\n  tank.initPlayer()\n  game.objects = [\n    tank, \n    enemyTank, \n    enemyTank2, \n    enemyTank3,\n    enemyTank4,\n    enemyTank5,\n    enemyTank6,\n    enemyTank7\n  ]\n  game.tree = rbush().load(game.objects)\n  level.objects = level.objects.concat(game.objects)\n  return level\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/level.js","import commands from 'lib/commands'\n\nexport class CommandQueue {\n  \n  constructor(target) {\n    this.queue = []\n    this.target = target || null\n  }\n\n  getFirst() {\n    return this.queue[0]\n  }\n\n  get length() {\n    return this.queue.length\n  }\n\n  pop() {\n    const result = this.queue.shift()\n    if (this.queue.length > 0) {\n      const current = this.getFirst()\n      if (current.getStatus() === 'idle') {\n        current.run.apply(current, current.args)\n      }\n    }\n    return result\n  }\n\n  update() {\n    if (this.queue.length > 0) {\n      this.getFirst().update()\n    }\n  }\n\n  clear() {\n    this.queue = []\n  }\n\n  log() {\n    console.log(this.queue)\n  }\n\n  push(name) {\n    const command = new Command(this.target, name)\n    const args = Array.prototype.slice.call(arguments, 1)\n    if (this.length === 0) {\n      command.run.apply(command, args)\n    } else {\n      command.args = args\n    }\n    this.queue.push(command)\n    return command\n  }\n\n}\n\nexport class Command {\n  \n  constructor(target, name) {\n    if (!name) {\n      throw new Error('name field is required by Command constructor');\n    }\n    this.statuses = {\n      0 : 'idle',\n      1 : 'is-running',\n      2 : 'paused',\n      3 : 'completed',\n      4 : 'aborted',\n      5 : 'waiting',\n    }\n    this.target = target\n    this.currentStatus = 0\n    this.name = name\n    this.state = {}\n  }\n\n  // method is used?\n  getName() {\n    return this.name\n  }\n\n  run() {\n    const text = `Cant find command with name: ${this.name}`\n    const job = commands[this.name]\n    if (!job) { \n      throw new Error(text)\n    }\n    this.job = job\n    this.currentStatus = 1\n    this.job.init.apply(this, arguments)\n  }\n\n  // method not used\n  stop() {\n    this.currentStatus = 2\n  }\n\n  // method not used\n  end() {\n    this.currentStatus = 4\n  }\n\n  getStatus() {   \n    return this.statuses[this.currentStatus]\n  }\n\n  update() {\n    if (this.job && this.job.update) {\n      this.job.update.call(this)\n    }\n  }\n\n  complete() {\n    this.currentStatus = 3\n    this.target.queue.pop()\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/command.js","export default {\n  'moveTo': {\n    init: function(x, y, relative) {\n      if (typeof(x) !== 'number' || typeof(y) !== 'number') {\n        return new Error('x, y is requried')\n      }\n      const state = this.state\n      const target = this.target\n      if (relative) {\n    \t\tstate.position = {\n    \t\t  x: target.x + x,\n    \t\t  y: target.y + y,\n    \t\t}\n      } else {\n\t\t    state.position = {x, y}\n      }\n    },\n    update: function() {\n      const state = this.state\n      const target = this.target\n      state.endX = target.position.x === state.position.x\n      state.endY = target.position.y === state.position.y\n\n      if (state.endX && state.endY) {\n        this.complete()\n      } else {\n        target.moveTo(state.position)\n      }\n    }\n  },\n\n  fire: {\n    init: function(x, y) {\n      if (x < -1 || x > 1) {\n        throw new Error('x has not normalized value')\n      }\n      if (y < - 1 || y > 1) {\n        throw new Error('y has not normalized value')\n      }\n      if (x !== undefined && y !== undefined) {\n        this.target.dirVec.x = x\n        this.target.dirVec.y = y\n      }\n    },\n    update: function() {\n      this.target.fire()\n      this.complete()\n    }\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/commands.js","\nexport class StackFSM {\n\n  stack = []\n\n  popState() {\n    return this.stack.pop()\n  }\n\n  pushState(state) {\n    if (this.getCurrentState() !== state) {\n      this.stack.push(state)\n    }\n  }\n\n  getCurrentState() {\n    return this.stack.length > 0 ?\n      this.stack[this.stack.length - 1] : null \n  }\n\n  update() {\n    const state = this.getCurrentState()\n    if (state !== null) {\n      state()\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/fsm.js","'use strict';\n\nvar Queue = require('tinyqueue');\n\nmodule.exports = knn;\n\nfunction knn(tree, x, y, n, predicate) {\n    var node = tree.data,\n        result = [],\n        toBBox = tree.toBBox,\n        i, child;\n\n    var queue = new Queue(null, compareDist);\n\n    while (node) {\n        for (i = 0; i < node.children.length; i++) {\n            child = node.children[i];\n            queue.push({\n                node: child,\n                isItem: node.leaf,\n                dist: boxDist(x, y, node.leaf ? toBBox(child) : child)\n            });\n        }\n\n        while (queue.length && queue.peek().isItem) {\n            var candidate = queue.pop().node;\n            if (!predicate || predicate(candidate))\n                result.push(candidate);\n            if (n && result.length === n) return result;\n        }\n\n        node = queue.pop();\n        if (node) node = node.node;\n    }\n\n    return result;\n}\n\nfunction compareDist(a, b) {\n    return a.dist - b.dist;\n}\n\nfunction boxDist(x, y, box) {\n    var dx = axisDist(x, box.minX, box.maxX),\n        dy = axisDist(y, box.minY, box.maxY);\n    return dx * dx + dy * dy;\n}\n\nfunction axisDist(k, min, max) {\n    return k < min ? min - k :\n           k <= max ? 0 :\n           k - max;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rbush-knn/index.js\n// module id = 8\n// module chunks = 0","'use strict';\n\nmodule.exports = TinyQueue;\nmodule.exports.default = TinyQueue;\n\nfunction TinyQueue(data, compare) {\n    if (!(this instanceof TinyQueue)) return new TinyQueue(data, compare);\n\n    this.data = data || [];\n    this.length = this.data.length;\n    this.compare = compare || defaultCompare;\n\n    if (this.length > 0) {\n        for (var i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nTinyQueue.prototype = {\n\n    push: function (item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    },\n\n    pop: function () {\n        if (this.length === 0) return undefined;\n\n        var top = this.data[0];\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = this.data[this.length];\n            this._down(0);\n        }\n        this.data.pop();\n\n        return top;\n    },\n\n    peek: function () {\n        return this.data[0];\n    },\n\n    _up: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var item = data[pos];\n\n        while (pos > 0) {\n            var parent = (pos - 1) >> 1;\n            var current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    },\n\n    _down: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var halfLength = this.length >> 1;\n        var item = data[pos];\n\n        while (pos < halfLength) {\n            var left = (pos << 1) + 1;\n            var right = left + 1;\n            var best = data[left];\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tinyqueue/index.js\n// module id = 9\n// module chunks = 0","\nclass Panel {\n\n  constuctor(el, options) {\n    const {x, y, width, height, title, children } = options\n    this.tpl = options.tpl\n    this.x = x\n    this.y = y\n    this.model = options.model\n    this.width = width\n    this.height = height\n    this.title = title\n    this.model.listen('update', this.render())\n  }\n\n  setModel(model) {\n    this.model = model\n  }\n\n  getModel() {\n    return this.model\n  }\n\n  render() {\n    this.el.insertAdjacentHTML('beforeBegin', this.tpl(this.model.getAttrs()))\n  }\n}\n\nexport default {\n  Views: {\n    Panel,\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/ui.js","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rbush/index.js\n// module id = 11\n// module chunks = 0","'use strict';\n\nmodule.exports = quickselect;\nmodule.exports.default = quickselect;\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n};\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/quickselect/index.js\n// module id = 12\n// module chunks = 0"],"sourceRoot":""}