{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/utils.js","webpack:///./node_modules/victor/index.js","webpack:///./src/core/object.js","webpack:///./node_modules/quickselect/index.js","webpack:///./node_modules/rbush/index.js","webpack:///./src/core/ui.js","webpack:///./src/core/level.js","webpack:///./node_modules/tinyqueue/index.js","webpack:///./node_modules/rbush-knn/index.js","webpack:///./src/core/fsm.js","webpack:///./src/lib/commands.js","webpack:///./src/lib/command.js","webpack:///./src/core/game.ts","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","randomIntFromRange","min","max","Math","floor","random","randomColor","colors","length","distance","x1","y1","x2","y2","xDist","yDist","sqrt","pow","_object","getCanvasEl","canvas","document","querySelector","width","innerWidth","height","innerHeight","getRandomNum","lvlBlockFactory","blockType","j","size","w","h","LevelBlock","color","position","x","y","rect","debounce","f","ms","context","arguments","undefined","timer","_len","args","Array","_key","clearTimeout","setTimeout","console","log","apply","throttle","func","ctx","savedArgs","savedThis","isThrottled","wrapper","this","Victor","fromArray","arr","fromObject","obj","addX","vec","addY","add","addScalar","scalar","addScalarX","addScalarY","subtractX","subtractY","subtract","subtractScalar","subtractScalarX","subtractScalarY","divideX","vector","divideY","divide","divideScalar","divideScalarX","divideScalarY","invertX","invertY","invert","multiplyX","multiplyY","multiply","multiplyScalar","multiplyScalarX","multiplyScalarY","normalize","norm","limit","factor","abs","randomize","topLeft","bottomRight","randomizeX","randomizeY","randomizeAny","round","unfloat","toFixed","precision","mixX","amount","mixY","mix","clone","copyX","copyY","copy","zero","dot","vec2","cross","projectOnto","coeff","horizontalAngle","atan2","horizontalAngleDeg","radian2degrees","verticalAngle","verticalAngleDeg","angle","angleDeg","direction","rotate","nx","cos","sin","ny","rotateDeg","degrees2radian","rotateTo","rotation","rotateToDeg","rotateBy","rotateByDeg","distanceX","absDistanceX","distanceY","absDistanceY","distanceSq","dx","dy","lengthSq","magnitude","isZero","isEqualTo","toString","toArray","toObject","degrees","PI","rad","deg","_utils","_command","_fsm","BaseObject","options","_classCallCheck","velocity","life","display","state","moving","up","down","left","right","dirVec","_victor2","default","remove","bind","getDefaultSize","_rect","queue","CommandQueue","dir","onUpdateDirection","update","onUpdate","game","getCtx","beginPath","fillStyle","fill","closePath","onRender","hide","dt","getDt","step","stepX","stepY","movement","startX","startY","endX","endY","directionX","directionY","data","_state$movement","Bullet","_possibleConstructorReturn","__proto__","getPrototypeOf","_this2","lifeTime","damage","type","collided","owner","outdate","_this3","move","_rbushKnn2","tree","forEach","target","idx","a","b","res","Tank","_this4","bullets","tower_angle","tower_velocity","bulletbuffer","components","gunDirection","headColor","gunColor","radius","restore","setGunAngle","val","gunAngle","tankComponent","push","indexOf","splice","enableControls","player","font","fillText","text","component","hp","labelTxt","Date","now","reloading","bullet","_extends","setPosition","insert","keys","_this5","shift","_dirVec","radian","headHalfWidth","headWidth","headHalfHeight","headHeight","gunPosition","headX","headY","strokeStyle","moveTo","lineTo","lineWidth","stroke","margin","fillRect","drawBody","drawHead","drawGun","bulletLabelX","bulletLabelY","drawBulletCountLabel","drawHealthBar","showReloadText","draw","moveBy","updateBullets","updateComponents","directionName","pressed","_this6","listener","e","keyCode","38","axis","40","37","39","onKeyPress","lastFireTime","lastLoopTime","fire","addEventListener","Enemy","EnemyTank","_this7","scanRange","unit","fsm","StackFSM","initCPU","scanner","scanLine","_this8","cpu","pushState","stateScout","nextState","_this9","num","range","lastScoutScan","map","sameDirectionX","sameDirectionY","closerToY","closerToX","newX","Soldier","quickselect","k","compare","quickselectStep","z","exp","sd","newLeft","newRight","t","swap","defaultCompare","tmp","rbush","maxEntries","format","_maxEntries","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","calcBBox","node","toBBox","distBBox","children","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","multiSelect","mid","stack","pop","all","_all","search","bbox","result","len","childBBox","nodesToSearch","collides","load","_build","slice","_splitRoot","tmpNode","_insert","parent","index","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","siblings","compareArr","Function","join","Panel","el","title","tpl","model","listen","render","insertAdjacentHTML","getAttrs","Views","testLevel1Map","testLevel1","create","objects","removeFromList","list","removeObj","testMap","rows","tank","cells","enemyTank","enemyTank2","enemyTank3","enemyTank4","enemyTank5","enemyTank6","enemyTank7","window","initPlayer","_rbush2","concat","TinyQueue","_down","_up","top","peek","pos","current","halfLength","best","Queue","compareDist","dist","boxDist","box","axisDist","predicate","isItem","candidate","getCurrentState","init","relative","Error","complete","_commands","getFirst","getStatus","run","command","Command","statuses","0","1","2","3","4","5","currentStatus","job","_commands2","Game","maxFps","listeners","paused","time","seconds","minutes","hours","frameDuration","getCanvasCtx","pause","lastPausedTime","play","loop","onResize","onMouseMove","setCanvasEl","canvasEl","utils_1","getContext","setContext","addListeners","_this","event","mouse","clientX","clientY","start","reqId","requestAnimationFrame","performance","fps","currentLevel","loadLevel","parameters","fn","clearRect","String","_game","_level","_game2"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","import { LevelBlock } from 'core/object'\n\n// Utility Functions\nexport function randomIntFromRange(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\nexport const getCanvasEl = function() {\n  const canvas = document.querySelector('canvas')\n  canvas.width = innerWidth\n  canvas.height = innerHeight\n  return canvas\n}\n\nexport const getRandomNum = (min, max) => {\n  return Math.floor(Math.random() * max - min) + min\n}\n\nexport function randomColor(colors) {\n  return colors[Math.floor(Math.random() * colors.length)]\n}\n\nexport function distance(x1, y1, x2, y2) {\n  const xDist = x2 - x1\n  const yDist = y2 - y1\n\n  return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2))\n\n}\n\nexport const lvlBlockFactory = (blockType, i, j) => {\n  const colors = ['grey', 'green', 'blue']\n  let size = { w: 50, h: 50 }\n  return new LevelBlock({\n    color: colors[blockType],\n    position: {\n      x: size.w * j,\n      y: size.h * i,\n    },\n    rect: {\n      ...size,\n    },\n  })\n}\n\nexport const debounce = function(f, ms, context = {}) {\n  let timer = null\n  return function (...args) {\n    const onComplete = () => {\n      console.log(args)\n      f.apply(context, args)\n      timer = null\n    }\n\n    if (timer) {\n      clearTimeout(timer)\n    }\n\n    timer = setTimeout(onComplete, ms)\n  };\n}\n\n\nexport const throttle = function(func, ms, ctx) {\n\n  var isThrottled = false,\n    savedArgs,\n    savedThis;\n\n  function wrapper() {\n\n    if (isThrottled) { // (2)\n      savedArgs = arguments;\n      savedThis = this;\n      return;\n    }\n\n    func.apply(ctx, arguments); // (1)\n\n    isThrottled = true;\n\n    setTimeout(function() {\n      isThrottled = false; // (3)\n      if (savedArgs) {\n        wrapper.apply(savedThis, savedArgs);\n        savedArgs = savedThis = null;\n      }\n    }, ms);\n  }\n\n  return wrapper;\n}\n","exports = module.exports = Victor;\n\n/**\n * # Victor - A JavaScript 2D vector class with methods for common vector operations\n */\n\n/**\n * Constructor. Will also work without the `new` keyword\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = Victor(42, 1337);\n *\n * @param {Number} x Value of the x axis\n * @param {Number} y Value of the y axis\n * @return {Victor}\n * @api public\n */\nfunction Victor (x, y) {\n\tif (!(this instanceof Victor)) {\n\t\treturn new Victor(x, y);\n\t}\n\n\t/**\n\t * The X axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.x;\n\t *     // => 42\n\t *\n\t * @api public\n\t */\n\tthis.x = x || 0;\n\n\t/**\n\t * The Y axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.y;\n\t *     // => 21\n\t *\n\t * @api public\n\t */\n\tthis.y = y || 0;\n};\n\n/**\n * # Static\n */\n\n/**\n * Creates a new instance from an array\n *\n * ### Examples:\n *     var vec = Victor.fromArray([42, 21]);\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromArray\n * @param {Array} array Array with the x and y values at index 0 and 1 respectively\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromArray = function (arr) {\n\treturn new Victor(arr[0] || 0, arr[1] || 0);\n};\n\n/**\n * Creates a new instance from an object\n *\n * ### Examples:\n *     var vec = Victor.fromObject({ x: 42, y: 21 });\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromObject\n * @param {Object} obj Object with the values for x and y\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromObject = function (obj) {\n\treturn new Victor(obj.x || 0, obj.y || 0);\n};\n\n/**\n * # Manipulation\n *\n * These functions are chainable.\n */\n\n/**\n * Adds another vector's X axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addX(vec2);\n *     vec1.toString();\n *     // => x:30, y:10\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addX = function (vec) {\n\tthis.x += vec.x;\n\treturn this;\n};\n\n/**\n * Adds another vector's Y axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addY(vec2);\n *     vec1.toString();\n *     // => x:10, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addY = function (vec) {\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds another vector to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.add(vec2);\n *     vec1.toString();\n *     // => x:30, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.add = function (vec) {\n\tthis.x += vec.x;\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to both vector axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalar(2);\n *     vec.toString();\n *     // => x: 3, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalar = function (scalar) {\n\tthis.x += scalar;\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the X axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarX(2);\n *     vec.toString();\n *     // => x: 3, y: 2\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarX = function (scalar) {\n\tthis.x += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarY(2);\n *     vec.toString();\n *     // => x: 1, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarY = function (scalar) {\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the X axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractX(vec2);\n *     vec1.toString();\n *     // => x:80, y:50\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractX = function (vec) {\n\tthis.x -= vec.x;\n\treturn this;\n};\n\n/**\n * Subtracts the Y axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractY(vec2);\n *     vec1.toString();\n *     // => x:100, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractY = function (vec) {\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtract(vec2);\n *     vec1.toString();\n *     // => x:80, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtract = function (vec) {\n\tthis.x -= vec.x;\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalar(20);\n *     vec.toString();\n *     // => x: 80, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalar = function (scalar) {\n\tthis.x -= scalar;\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarX(20);\n *     vec.toString();\n *     // => x: 80, y: 200\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarX = function (scalar) {\n\tthis.x -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarY(20);\n *     vec.toString();\n *     // => x: 100, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarY = function (scalar) {\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Divides the X axis by the x component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.divideX(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideX = function (vector) {\n\tthis.x /= vector.x;\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.divideY(vec2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideY = function (vector) {\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by a axis values of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.divide(vec2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Victor} vector The vector to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divide = function (vector) {\n\tthis.x /= vector.x;\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalar(2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalar = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t}\n\n\treturn this;\n};\n\n/**\n * Divides the X axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarX(2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarX = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarY(2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarY = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.y = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Inverts the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertX();\n *     vec.toString();\n *     // => x:-100, y:50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertX = function () {\n\tthis.x *= -1;\n\treturn this;\n};\n\n/**\n * Inverts the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertY();\n *     vec.toString();\n *     // => x:100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertY = function () {\n\tthis.y *= -1;\n\treturn this;\n};\n\n/**\n * Inverts both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invert();\n *     vec.toString();\n *     // => x:-100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invert = function () {\n\tthis.invertX();\n\tthis.invertY();\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by X component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyX = function (vector) {\n\tthis.x *= vector.x;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by Y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyY = function (vector) {\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by values from a given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.multiply(vec2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Victor} vector The vector to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiply = function (vector) {\n\tthis.x *= vector.x;\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalar(2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Number} The scalar to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalar = function (scalar) {\n\tthis.x *= scalar;\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarX(2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarX = function (scalar) {\n\tthis.x *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarY(2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarY = function (scalar) {\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Normalize\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.normalize = function () {\n\tvar length = this.length();\n\n\tif (length === 0) {\n\t\tthis.x = 1;\n\t\tthis.y = 0;\n\t} else {\n\t\tthis.divide(Victor(length, length));\n\t}\n\treturn this;\n};\n\nVictor.prototype.norm = Victor.prototype.normalize;\n\n/**\n * If the absolute vector axis is greater than `max`, multiplies the axis by `factor`\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.limit(80, 0.9);\n *     vec.toString();\n *     // => x:90, y:50\n *\n * @param {Number} max The maximum value for both x and y axis\n * @param {Number} factor Factor by which the axis are to be multiplied with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.limit = function (max, factor) {\n\tif (Math.abs(this.x) > max){ this.x *= factor; }\n\tif (Math.abs(this.y) > max){ this.y *= factor; }\n\treturn this;\n};\n\n/**\n * Randomizes both vector axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomize(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:67, y:73\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomize = function (topLeft, bottomRight) {\n\tthis.randomizeX(topLeft, bottomRight);\n\tthis.randomizeY(topLeft, bottomRight);\n\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeX(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:55, y:50\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeX = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.x, bottomRight.x);\n\tvar max = Math.max(topLeft.x, bottomRight.x);\n\tthis.x = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeY(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:100, y:66\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeY = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.y, bottomRight.y);\n\tvar max = Math.max(topLeft.y, bottomRight.y);\n\tthis.y = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomly randomizes either axis between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeAny(new Victor(50, 60), new Victor(70, 80));\n *     vec.toString();\n *     // => x:100, y:77\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeAny = function (topLeft, bottomRight) {\n\tif (!! Math.round(Math.random())) {\n\t\tthis.randomizeX(topLeft, bottomRight);\n\t} else {\n\t\tthis.randomizeY(topLeft, bottomRight);\n\t}\n\treturn this;\n};\n\n/**\n * Rounds both axis to an integer value\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.unfloat = function () {\n\tthis.x = Math.round(this.x);\n\tthis.y = Math.round(this.y);\n\treturn this;\n};\n\n/**\n * Rounds both axis to a certain precision\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @param {Number} Precision (default: 8)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.toFixed = function (precision) {\n\tif (typeof precision === 'undefined') { precision = 8; }\n\tthis.x = this.x.toFixed(precision);\n\tthis.y = this.y.toFixed(precision);\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the X axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixX(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:100\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixX = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.x = (1 - amount) * this.x + amount * vec.x;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the Y axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixY(vec2, 0.5);\n *     vec.toString();\n *     // => x:100, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixY = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.y = (1 - amount) * this.y + amount * vec.y;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mix(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mix = function (vec, amount) {\n\tthis.mixX(vec, amount);\n\tthis.mixY(vec, amount);\n\treturn this;\n};\n\n/**\n * # Products\n */\n\n/**\n * Creates a clone of this vector\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = vec1.clone();\n *\n *     vec2.toString();\n *     // => x:10, y:10\n *\n * @return {Victor} A clone of the vector\n * @api public\n */\nVictor.prototype.clone = function () {\n\treturn new Victor(this.x, this.y);\n};\n\n/**\n * Copies another vector's X component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyX(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:10\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyX = function (vec) {\n\tthis.x = vec.x;\n\treturn this;\n};\n\n/**\n * Copies another vector's Y component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyY(vec1);\n *\n *     vec2.toString();\n *     // => x:10, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyY = function (vec) {\n\tthis.y = vec.y;\n\treturn this;\n};\n\n/**\n * Copies another vector's X and Y components in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copy(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copy = function (vec) {\n\tthis.copyX(vec);\n\tthis.copyY(vec);\n\treturn this;\n};\n\n/**\n * Sets the vector to zero (0,0)\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *\t\t var1.zero();\n *     vec1.toString();\n *     // => x:0, y:0\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.zero = function () {\n\tthis.x = this.y = 0;\n\treturn this;\n};\n\n/**\n * Calculates the dot product of this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.dot(vec2);\n *     // => 23000\n *\n * @param {Victor} vector The second vector\n * @return {Number} Dot product\n * @api public\n */\nVictor.prototype.dot = function (vec2) {\n\treturn this.x * vec2.x + this.y * vec2.y;\n};\n\nVictor.prototype.cross = function (vec2) {\n\treturn (this.x * vec2.y ) - (this.y * vec2.x );\n};\n\n/**\n * Projects a vector onto another vector, setting itself to the result.\n *\n * ### Examples:\n *     var vec = new Victor(100, 0);\n *     var vec2 = new Victor(100, 100);\n *\n *     vec.projectOnto(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want to project this vector onto\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.projectOnto = function (vec2) {\n    var coeff = ( (this.x * vec2.x)+(this.y * vec2.y) ) / ((vec2.x*vec2.x)+(vec2.y*vec2.y));\n    this.x = coeff * vec2.x;\n    this.y = coeff * vec2.y;\n    return this;\n};\n\n\nVictor.prototype.horizontalAngle = function () {\n\treturn Math.atan2(this.y, this.x);\n};\n\nVictor.prototype.horizontalAngleDeg = function () {\n\treturn radian2degrees(this.horizontalAngle());\n};\n\nVictor.prototype.verticalAngle = function () {\n\treturn Math.atan2(this.x, this.y);\n};\n\nVictor.prototype.verticalAngleDeg = function () {\n\treturn radian2degrees(this.verticalAngle());\n};\n\nVictor.prototype.angle = Victor.prototype.horizontalAngle;\nVictor.prototype.angleDeg = Victor.prototype.horizontalAngleDeg;\nVictor.prototype.direction = Victor.prototype.horizontalAngle;\n\nVictor.prototype.rotate = function (angle) {\n\tvar nx = (this.x * Math.cos(angle)) - (this.y * Math.sin(angle));\n\tvar ny = (this.x * Math.sin(angle)) + (this.y * Math.cos(angle));\n\n\tthis.x = nx;\n\tthis.y = ny;\n\n\treturn this;\n};\n\nVictor.prototype.rotateDeg = function (angle) {\n\tangle = degrees2radian(angle);\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateTo = function(rotation) {\n\treturn this.rotate(rotation-this.angle());\n};\n\nVictor.prototype.rotateToDeg = function(rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateTo(rotation);\n};\n\nVictor.prototype.rotateBy = function (rotation) {\n\tvar angle = this.angle() + rotation;\n\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateByDeg = function (rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateBy(rotation);\n};\n\n/**\n * Calculates the distance of the X axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceX(vec2);\n *     // => -100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceX = function (vec) {\n\treturn this.x - vec.x;\n};\n\n/**\n * Same as `distanceX()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.absDistanceX(vec2);\n *     // => 100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceX = function (vec) {\n\treturn Math.abs(this.distanceX(vec));\n};\n\n/**\n * Calculates the distance of the Y axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => -10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceY = function (vec) {\n\treturn this.y - vec.y;\n};\n\n/**\n * Same as `distanceY()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => 10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceY = function (vec) {\n\treturn Math.abs(this.distanceY(vec));\n};\n\n/**\n * Calculates the euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distance(vec2);\n *     // => 100.4987562112089\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distance = function (vec) {\n\treturn Math.sqrt(this.distanceSq(vec));\n};\n\n/**\n * Calculates the squared euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceSq(vec2);\n *     // => 10100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceSq = function (vec) {\n\tvar dx = this.distanceX(vec),\n\t\tdy = this.distanceY(vec);\n\n\treturn dx * dx + dy * dy;\n};\n\n/**\n * Calculates the length or magnitude of the vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.length();\n *     // => 111.80339887498948\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.length = function () {\n\treturn Math.sqrt(this.lengthSq());\n};\n\n/**\n * Squared length / magnitude\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.lengthSq();\n *     // => 12500\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.lengthSq = function () {\n\treturn this.x * this.x + this.y * this.y;\n};\n\nVictor.prototype.magnitude = Victor.prototype.length;\n\n/**\n * Returns a true if vector is (0, 0)\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     vec.zero();\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isZero = function() {\n\treturn this.x === 0 && this.y === 0;\n};\n\n/**\n * Returns a true if this vector is the same as another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(100, 50);\n *     vec1.isEqualTo(vec2);\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isEqualTo = function(vec2) {\n\treturn this.x === vec2.x && this.y === vec2.y;\n};\n\n/**\n * # Utility Methods\n */\n\n/**\n * Returns an string representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toString();\n *     // => x:10, y:20\n *\n * @return {String}\n * @api public\n */\nVictor.prototype.toString = function () {\n\treturn 'x:' + this.x + ', y:' + this.y;\n};\n\n/**\n * Returns an array representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toArray();\n *     // => [10, 20]\n *\n * @return {Array}\n * @api public\n */\nVictor.prototype.toArray = function () {\n\treturn [ this.x, this.y ];\n};\n\n/**\n * Returns an object representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toObject();\n *     // => { x: 10, y: 20 }\n *\n * @return {Object}\n * @api public\n */\nVictor.prototype.toObject = function () {\n\treturn { x: this.x, y: this.y };\n};\n\n\nvar degrees = 180 / Math.PI;\n\nfunction random (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction radian2degrees (rad) {\n\treturn rad * degrees;\n}\n\nfunction degrees2radian (deg) {\n\treturn deg / degrees;\n}\n","import {throttle, getRandomNum, distance} from 'lib/utils'\nimport { CommandQueue } from 'lib/command'\nimport {StackFSM} from 'core/fsm'\nimport Victor from 'victor'\nimport knn from 'rbush-knn'\n\n/**\n * TODO: Move to utils\n * Проверяет столкнулись ли два прямоугольника\n * @param  {BaseObject} a \n * @param  {BaseObject} b \n * @return {Boolean} - результат (столкнулись ли они?)\n */\nconst checkCollision = function(a, b) {\n  let res = false\n  if (a.x < b.x + b.w  && a.x + a.w  > b.x &&\n    a.y < b.y + b.h && a.y + a.h > b.y) {\n    res = true\n  }\n  return res\n}\n\nclass BaseObject {\n\n  velocity = 300\n  life = 100\n\n  display = true\n\n  state = {\n    moving: false\n  }\n\n  direction = {\n    up: false,\n    down: false,\n    left: false,\n    right:false,\n  }\n\n  get x() {\n    return this.position.x\n  }\n\n  get y() {\n    return this.position.y\n  }\n\n  get minX() {\n    return this.position.x\n  }\n\n  get minY() {\n    return this.position.y\n  }\n\n  get maxX() {\n    return this.position.x + this.w\n  }\n\n  get maxY() {\n    return this.position.x + this.h\n  }\n\n  dirVec = new Victor(0, 0)\n\n  constructor(options) {\n    let {color, position, rect, remove } = options\n    this.color = color\n    if (typeof(remove) === 'function') {\n      this.remove = remove.bind(this)\n    }\n    this.position = position || new Victor(0, 0)\n    if (!rect) {\n      rect = this.getDefaultSize()\n    }\n    this.rect = rect\n    const { w, h } = rect\n    if (w && h) {\n      this.w = w\n      this.h = h\n    }\n    this.queue = new CommandQueue(this)\n  }\n\n  remove() {\n    // empty\n  }\n\n  getDefaultSize() {\n    return {\n      w: 40,\n      h: 40\n    }\n  }\n\n  getRect() {\n    return this.rect\n  }\n\n  getPosition() {\n    return this.position\n  }\n\n  setRect(rect) {\n    this.rect = rect\n  }\n\n  setPosition(position) {\n    this.position = position\n  }\n\n  setDirection(dir) {\n    this.dirVec.x = dir.x\n    this.dirVec.y = dir.y\n    this.onUpdateDirection()\n  }\n\n  onUpdateDirection() {\n\n  }\n\n  update() {\n    if (this.life <= 0) {\n      this.remove()\n    }\n    if (this.queue.length) {\n      this.queue.update()\n    }\n    this.onUpdate()\n  }\n\n  onUpdate() {\n  }\n\n  onRender() {\n  }\n\n  draw() {\n    if (!this.display)\n      return false\n    const c = game.getCtx()\n    c.beginPath()\n    c.rect(\n      this.position.x,\n      this.position.y,\n      this.w,\n      this.h\n    )\n    c.fillStyle = this.color\n    c.fill()\n    c.closePath()\n    this.onRender()\n  }\n\n  hide() {\n    this.display = false\n  }\n\n  show() {\n    this.display = true\n  }\n\n  destroy() {\n    this.hide()\n  }\n\n  moveBy() {\n    const dt = game.getDt()\n    const step = this.velocity * dt\n    if (this.direction.up) {\n      this.position.y -= step\n    }\n    if (this.direction.down) {\n      this.position.y += step\n    }\n    if (this.direction.left) {\n      this.position.x -= step\n    }\n    if (this.direction.right) {\n      this.position.x += step\n    }\n  }\n\n  move(dir) {\n    const dt = game.getDt()\n    const stepX = (this.velocity * dt) * dir.x\n    const stepY = (this.velocity * dt) * dir.y\n    this.position.x += stepX\n    this.position.y += stepY\n  }\n\n  moveTo(vec) {\n    const dt = game.getDt()\n    const x = this.position.x \n    const y = this.position.y\n\n    /** Init */\n\n    if (!this.state.movement) {\n      const startX = x\n      const startY = y\n      const endX = vec.x\n      const endY = vec.y\n      const distance = Math.sqrt(\n        Math.pow(endX - startX, 2) + \n        Math.pow(endY - startY, 2),\n      )\n\n      let directionX = Math.round((endX - startX) / distance)\n      let directionY = Math.round((endY - startY) / distance)\n\n      const data = {\n        endX,\n        endY,\n        startX,\n        startY,\n        distance,\n        directionX,\n        directionY,\n      }\n\n      this.state.movement = data\n      this.dirVec.x = directionX\n      this.dirVec.y = directionY\n    }\n\n    /** Update */\n\n    if (this.state.movement) {\n      const {\n        endX, endY, \n        startX, startY, \n        directionX, directionY,\n        distance\n      } = this.state.movement\n\n      this.position.x += directionX * this.velocity * dt\n      this.position.y += directionY * this.velocity * dt\n\n      const remainDistance = Math.sqrt(\n        Math.pow(x - startX, 2) +\n        Math.pow(y - startY, 2)\n      )\n\n      if (remainDistance >= distance) {\n        this.position.x = endX\n        this.position.y = endY\n        this.state.movement = false\n      }\n    }\n\n  }\n\n}\n\nexport class LevelBlock extends BaseObject {\n\n  constructor(options) {\n    super(options)\n  }\n\n}\n\nexport class Bullet extends BaseObject {\n\n  velocity = 500\n  lifeTime = 5 // sec\n  damage = 25\n  type = 'single'\n  collided = false\n\n  constructor(options) {\n    super(options)\n    this.owner = options.owner\n    setTimeout(() => {\n      this.outdate = true\n    }, this.lifeTime * 1000)\n  }\n\n  onHit() {\n    // TODO implement\n  }\n\n  onMiss() {\n    // TODO implement\n  }\n\n  onUpdate() {\n    this.move(this.dirVec)\n    const results = knn(game.tree, this.position.x, this.position.y, 3)\n    results.forEach((target, idx) => {\n      if (this !== target && this.owner !== target) {\n        if (checkCollision(this, target)) {\n          if (!this.collided) {\n            this.collided = true\n            if (target && typeof target.damage === 'function') {\n              target.damage(this.damage, this.type)\n            }\n          }\n        }\n      }\n    })\n  }\n\n}\n\nexport class Tank extends BaseObject {\n\n  life = 100\n  bullets = 5\n  velocity = 35\n  tower_angle = 180\n  tower_velocity = 2\n  bulletbuffer = []\n\n  components = []\n  gunDirection = new Victor(0, 0)\n\n  constructor(options) {\n    super(options)\n    const { color, headColor, gunColor } = options\n    this.color = color || '#4691ff'\n    this.radius = this.w *  2\n    this.headColor = headColor || 'black'\n    this.gunColor = gunColor || 'white'\n    this.restore = false\n    this.setGunAngle()\n  }\n\n  damage(val, type) {\n    if (this.life > 0) {\n      this.life -= val\n    } else {\n      this.life = 0\n    }\n  }\n\n  setGunAngle() {\n    this.gunAngle = 90\n  }\n\n  setHeadColor(color) {\n    this.headColor = color\n  }\n\n  addComponent(tankComponent) {\n    this.components.push(tankComponent)\n  }\n\n  removeComponent(tankComponent) {\n    const idx = this.components.indexOf(tankComponent)\n    if (idx > -1)\n      this.components.splice(idx, 1)\n  }\n\n  initPlayer() {\n    this.enableControls()\n    this.player = true\n  }\n\n  showReloadText() {\n    const c = game.getCtx()\n    const text = `Reloading...`\n    c.fillStyle = 'black'\n    c.font = '14px Helvetica'\n    c.fillText(text, innerWidth / 2, innerHeight / 2)\n  }\n\n  updateComponents() {\n    this.components.forEach((component) => {\n      component.update()\n    })\n  }\n\n  drawHealthBar(x, y) {\n    const hp = `hp: ${this.life}`\n    const c = game.getCtx()\n    c.fillStyle = 'black'\n    c.font = '18px Helvetica'\n    c.fillText(hp, x, y)\n  }\n\n  drawBulletCountLabel(x, y) {\n    const count = this.bullets\n    const labelTxt = `Bullets: ${count}`\n    const c = game.getCtx()\n    c.fillStyle = 'black'\n    c.font = '18px Helvetica'\n    c.fillText(labelTxt, x, y)\n  }  \n\n  // ADD fire MIXIN\n  fire() {\n    const time = Date.now()\n    if (this.bullets === 0) {\n      this.state.reloading = true\n      return false\n    }\n\n    const directionY = this.dirVec.y > 0 || this.dirVec.y < 0\n\n    const bullet = new Bullet({\n      rect: directionY ? { w: 3, h: 8 } : { w: 8, h: 3 },\n      color: 'red',\n      owner: this,\n    })\n\n    bullet.dirVec = {...this.dirVec}\n    bullet.setPosition(\n      new Victor(\n        this.gunDirection.x,\n        this.gunDirection.y\n      )\n    )\n\n    bullet.state.moving = true\n    this.bulletbuffer.push(bullet)\n    game.tree.insert(bullet)\n    this.bullets--\n  }\n\n  moveGun(keys) {\n    // LEFT, RIGHT\n    if (keys.right) {\n      // TODO USE TRIGONOMETRY\n      this.tower_angle += tower_velocity\n    }\n    if (keys.left) {\n      // TODO USE TRIGONOMETRY\n      this.tower_angle -= tower_velocity\n    }\n  }\n\n  updateBullets() {\n    this.bulletbuffer.forEach((bullet, idx) => {\n      if (bullet.outdate || bullet.collided) {\n        game.tree.remove(bullet)\n        this.bulletbuffer.shift()\n      } else {\n        bullet.update()\n      }\n    })\n    if (this.bullets <= 0 && !this.state.reloading) {\n      this.state.reloading = true\n      setTimeout(() => {\n        this.bullets += 5\n        this.state.reloading = false\n      }, 1500)\n    }\n  }\n\n  drawGun(c) {\n    const { x, y } = this.dirVec\n    if (x === 0 && y === -1) {\n      this.gunAngle = 270\n    } else if (x === 0 && y === 1) {\n      this.gunAngle = 90\n    } else if (x === 1 && y === 0) {\n      this.gunAngle = 0\n    } else if (x === -1 & y === 0) {\n      this.gunAngle = 180\n    }\n    const radian = Math.PI / 180 * this.gunAngle\n    this.headHalfWidth = this.headWidth / 2\n    this.headHalfHeight = this.headHeight / 2\n    this.gunPosition = new Victor(\n      this.headX + this.headHalfWidth,\n      this.headY + this.headHalfWidth\n    )\n    const length = this.radius / 3\n    const x1 = this.headX + this.headHalfWidth + length * Math.cos(radian)\n    const y1 = this.headY + this.headHalfHeight + length * Math.sin(radian)\n    this.gunDirection.x = x1\n    this.gunDirection.y = y1\n    c.beginPath()\n    c.strokeStyle = this.gunColor\n    c.moveTo(this.gunPosition.x, this.gunPosition.y)\n    c.lineTo(x1, y1)\n    c.lineWidth = 2\n    c.stroke()\n    c.lineWidth = 1\n    c.closePath()\n  }\n\n  drawHead(c) {\n    const margin = 30\n    this.headX = this.x + margin / 2\n    this.headY = this.y + margin / 2\n    this.headWidth = this.w - margin\n    this.headHeight = this.h - margin\n    c.beginPath()\n    c.fillStyle = this.headColor\n    c.fillRect(\n      this.headX,\n      this.headY, \n      this.headWidth,\n      this.headHeight\n    )\n    c.closePath()\n  }\n\n  drawBody(c) {\n    c.beginPath()\n    c.rect(\n      this.position.x,\n      this.position.y,\n      this.w,\n      this.h\n    )\n    c.fillStyle = this.color\n    c.fill()\n    c.closePath()    \n  }\n\n  draw() {\n    if (!this.display)\n      return false\n    const c = game.getCtx()\n    this.drawBody(c)\n    this.drawHead(c)\n    this.drawGun(c)\n    this.onRender()\n  }\n\n  onRender() {\n    if (this.player) {\n      const bulletLabelX = innerWidth - 80\n      const bulletLabelY = innerHeight - 10\n      this.drawBulletCountLabel(bulletLabelX, bulletLabelY)\n      this.drawHealthBar(5, innerHeight - 10)\n    }\n    if (this.state.reloading && this.player) {\n      this.showReloadText()\n    }\n    this.bulletbuffer.forEach((b) => {\n      b.draw()\n    })\n  }\n\n  onUpdate() {\n    this.moveBy()\n    this.updateBullets()\n    this.updateComponents()\n  }\n\n  onKeyPress(directionName, type) {\n    const pressed = type === 'keydown' ? true : false\n    this.direction[directionName] = pressed ? true : false\n  }\n\n  enableControls() {\n    const events = ['keydown', 'keyup']\n    const listener = (e) => {\n      const { keyCode, type } = e\n      const directions = {\n        38: {\n          name: 'up',\n          vec: new Victor(0, -1),\n          axis: 'y',\n        },\n        40: {\n          name: 'down',\n          vec: new Victor(0, 1),\n          axis: 'y',\n        },\n        37: {\n          name: 'left',\n          vec: new Victor(-1, 0),\n          axis: 'x',\n        },\n        39: {\n          name: 'right',\n          vec: new Victor(1, 0),\n          axis: 'x',\n        }\n      }\n      const direction = directions[keyCode]\n      if (direction) {\n        const { name, vec, axis } = direction\n        this.dirVec = vec\n        this.onKeyPress(name, type)\n      }\n      if (keyCode === 32 && type === 'keyup') {\n        if (!this.state.reloading) {\n          if (!this.lastFireTime) {\n            this.lastFireTime = game.lastLoopTime\n          }\n          if (game.lastLoopTime - this.lastFireTime > 1000) {\n            this.fire()\n            this.lastFireTime = null\n          }\n        }\n      }\n    }\n    events.forEach((name) => {\n      addEventListener(name, listener)\n    })\n  }\n}\n\nexport class EnemyTank extends Tank {\n\n  velocity = 50\n  scanRange = 600\n  unit = true\n\n  // add commands stack\n  // if we have command in stack\n  // and this command have some state\n  // pop stack command and apply state\n\n  constructor(options) {\n    super(options)\n    this.fsm = new StackFSM()\n    this.initCPU()\n    this.scanner = throttle(this.scanLine, 1000, this)\n  }\n\n  initCPU() {\n    this.cpu = true\n    setTimeout(() => {\n      this.fsm.pushState(() => this.stateScout())\n    }, getRandomNum(1, 5) * 1000)\n  }\n\n  onUpdate() {\n    this.updateBullets()\n    this.fsm.update()\n  }\n\n  scanLine() {\n    console.log(Date.now())\n  }\n\n  stateChangeWeapon(type, nextState) {\n    // changes weapon type\n    // for next attack\n  }\n\n  stateMoveTo(position, nextState) {\n    // moveTo position\n    // use pathfinding algorythm\n    // when got position\n    // pushNextState\n  }\n\n  stateAvoidAttack() {\n    // while beign in stateScout\n    // if enemy bullet is detected on line\n    // change line\n    // if enemy not detected fire in same direction\n    // if enemy detected fire at enemy\n    // if hp is low runAway\n  }\n\n  stateAttack() {\n    // if enemy detected\n    // fire at enemy position\n    // then scan for enemy bullet attacks\n    // if bullets detected avoid attacks\n    // if no bullets change position (UP, TOP, LEFT, RIGHT)\n  }\n\n  stateDoGroup() {\n    // find free group of objects\n    // join\n    // listen to group ai commands\n\n    // group features:\n\n    // positions - few objects can stay in Positions\n\n    // position - triangle\n    //  t t\n    // t t t\n    //  t t\n\n    // position - square\n    // t t t t\n    // t t t t\n    // t t t t\n\n    // group commands\n    // objects can order commands\n\n    // regroup - group idx will be resorted\n    // after that objects handle moveTo(position)\n    // attackAll - all at one direction\n    // all objects will attack at one direction\n\n    // attackSquarePosition - each obj attack in one point\n    // of squared space\n\n    // holdposition - objects will hold different positions\n    // for n times of attacks\n\n    // scanSquare - each objects will scan for enemy\n    // if enemy is attack - save direction X OR Y\n    // make scanSquare results with array of lines\n    // trigger next state of GroupController\n    // attackSquarePosition\n    //\n    // heal(obj) or repair - if obj type can heal\n    // it will heal other obj\n    // it will push stateRepair(obj)\n    //\n    // defend(obj)\n    // will cover building with some around positions\n    //\n    //\n  }\n\n  stateScout() {\n    if (!this.queue.length) {\n      const num = getRandomNum(3, 4) + 1\n      const range = getRandomNum(50, 100) + 1\n      this.queue.push('moveTo', -1 * range * num, 1, true)\n      this.queue.push('moveTo', 1 * range * num, 1, true)\n    }\n\n    // Логика разведки должна быть следующая \n    // \n    // Поведение - 1. Поиск противника\n    //\n    // 1) Просмотр по текущему направлению объекта вперед на n meters\n    // 2) Если объект не найден проехать n meters\n    // 3) Просканировать снова\n    // 4) Если не найден - сменить направление объекта. (Зациклить данное поведение)\n    //\n    //\n    // Поведение - 2. Противник был замечен n сек назад. Поиск в той-же области\n    // плюс атака на угад. \n    //\n    // 1) Продвинуться в сторону противника.\n    //  \n    //  Атаковать на ходу в сторону противника\n    //  Если противник ушел с линии найти его\n    //   И атаковать.\n    //  \n    //  2) Стрелять наперед - на несколько пунктов вверх по x, y\n    //\n    //\n    //\n\n    // TODO refactor\n    // add timer object\n    // use timer object\n    if (!this.lastScoutScan) {\n      this.lastScoutScan = game.lastLoopTime / 1000\n    }\n    // TODO refactor\n    // add new variables for elapsed time\n    // minutes\n    // seconds\n    // hours\n    if (game.lastLoopTime / 1000 - this.lastScoutScan > 1.5) {\n      knn(game.tree, this.x, this.y, 10).map((obj) => {\n        // TODO refactor\n        // add method to util isDirectionTheSame\n        if (obj.player) {\n          const fov = 100\n          const sameDirectionX = obj.x < this.x && this.dirVec.x == -1\n            || obj.x > this.x && this.dirVec.x == -1\n          const sameDirectionY = obj.y < this.y && this.dirVec.y == 1\n            || obj.y > this.y && this.dirVec.y == 1\n          const closerToY = this.y - fov < obj.y && this.y + fov > obj.y\n          const closerToX = this.x - fov < obj.x && this.x + fov > obj.y\n          if (sameDirectionX && closerToY || sameDirectionY && closerToX) {\n            // TODO add weapon queue\n            this.fire()\n            const newX = this.dirVec.x * (obj.x / 10)\n            const newY = 0\n            this.queue.push('moveTo', newX, newY, true)\n          }\n        }\n      })\n      this.lastScoutScan = null\n    }\n  }\n}\n\nexport class Enemy {\n\n  // Tower class will inherit this cls\n\n  // towers features:\n  //\n  // autocapture\n  // if enemy in scan radius\n  // it captures enemy position in realtime updates\n  //\n  // autofire\n  //\n  // it can autofire if enemy captured\n  //\n  // helpSignal\n  //\n  // it can scan for friendly objects\n  // to defence self\n  //\n  // enemy group will be cover tower\n  //\n\n}\n\nclass Soldier extends Enemy {\n\n  // add pathfinding behavior\n  // add fire behavior\n  // add repair behavior\n  // add group behavior\n  //\n\n  // features\n  //\n  // weapons\n  //\n  // granade:\n  //\n  // bazuka:\n  //\n  // skills:\n  //\n  // repair tank\n  //\n  // add mine\n  //\n  // use artillery\n  //\n  // it will handle free artillery\n  // artillery object has own behavior\n  //\n\n}\n\nclass Sniper extends Soldier {\n\n  // add enchantent skill behavior\n\n  // features\n  //\n  // skills:\n  //\n  // longshoot - anti-armor attack with long reload time\n  //\n  // captureEnemy - captures enemy with laser\n\n}\n\n// TODO add fire types\n//\n//\n// At one line\n//\n// single - one shoot in 1 sec\n//\n// multiple - two shoots in 1 sec\n//\n// triple - 3 shoots in 1 sec\n//\n// laser - one shoot in 3 secs\n//\n// At two lines\n//\n// single\n//\n// laser\n//\n// RocketAOE\n//\n// aoe rocket - fires down squared space 2x2\n//\n// Rocket Auto-target\n//\n// launch rocket that will be hit at enemy\n// bahavior:\n//\n// if it hit closer to enemy at 10px nearly\n// it will reduce enemy hp with full damage\n//\n// if it hit closer to enemy > 10px\n// it will has chance to hit 50/50 and damage reduced by 50%\n//\n//\n// Attack with angle direction at Time\n//\n// if object has captured enemy position and moving\n// it will be attack at enemy position with some angle direction\n//\n\n\n// TODO Separate enemy states\n//\n// fsm for movement, change positions\n// will have states:\n// state.movement\n// state.holdPosition\n// state.attackingAtPosition\n// state.hasNoPosition\n// state.inGroup\n// state.runaway\n// state.attacking\n// state.repairing\n//\n//\n\n// TODO Tank Behavior enchantments:\n//\n// 1) With low hp movement speed is reduced\n// 2) Tank can by three of types:\n//\n// Lightweight - small size\n// has much movement speed low dmg\n//\n// MiddleEnd - normal size\n// has normal speed, normal dmg\n//\n// HeavyTank - big size\n// has slow movenet speed, big dmg, long reloading\n//\n\n// TODO add armor entity\n//\n// armor logic\n//\n// if armor easy\n//\n// if weapon heavy - it will hit lightweight armor by 200% dmg\n// if weapon normal - it will hit lightweight armor by 150% dmg\n// if weapon easy - it will hit lightweight armor by 80-100% dmg\n//\n// if armor heavy\n// weapon normal hit this armor by 60-80% dmg\n// weapon heavy hit this armor by 100% dmg\n// weapon easy hit this armor by 30-40% dmg\n//\n// if armor normal\n// weapon normal hit this armor by 100% dmg\n// weapon heavy hit this armor by 150% dmg\n// weapon easy hit his armor by 60-80% dmg\n//\n//\n\n// NOTE\n// Tower will have heavy armor type\n// Soldiers, Snipers will have easy armor type\n// Tank - will have normal armor type\n// HeavyTank - will have heavy armor type\n//\n\n// NOTE\n//\n// TankTypes\n//\n// Speed lightweight (lvl 1 - 5)\n// Lightweight scout (lvl 1 - 5)\n// Normal (lvl 1 - 5)\n// Heavy (lvl 1 - 5)\n// Boss (lvl 1 -5)\n//\n\n// TOWER TYPES\n//\n// RADAR Type - can capture enemy position for long range\n//\n// DEFEND Type - can attack enemies\n//\n// SUPPORT TYPE - can repair nearby objects\n//\n// BASE TYPE - if it will be destroyed - gameover\n//\n//\n\n\n// NOTE DESTROY OF TANKS BEHAVIOR\n//\n// drop loot\n// - enchatments\n// - gold\n// - bomb\n// - mine\n//\n//\n\n// TANK PLAYER SKILLS\n//\n// toggleWeaponType\n// reloadWeaponBullets\n// buyFriendTank - if stay near with base building\n// buyFriendSoldier - if stay near with base building\n// repair - if stay with mechanics building or has repair item\n// pickup object - pick enchatment or gold\n// pickup gold - auto behavior will pick up nearly gold automated\n//\n","'use strict';\n\nmodule.exports = quickselect;\nmodule.exports.default = quickselect;\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n};\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","\nclass Panel {\n\n  constuctor(el, options) {\n    const {x, y, width, height, title, children } = options\n    this.tpl = options.tpl\n    this.x = x\n    this.y = y\n    this.model = options.model\n    this.width = width\n    this.height = height\n    this.title = title\n    this.model.listen('update', this.render())\n  }\n\n  setModel(model) {\n    this.model = model\n  }\n\n  getModel() {\n    return this.model\n  }\n\n  render() {\n    this.el.insertAdjacentHTML('beforeBegin', this.tpl(this.model.getAttrs()))\n  }\n}\n\nexport default {\n  Views: {\n    Panel,\n  }\n}\n","import { Tank, EnemyTank } from 'core/object'\nimport { Panel } from 'core/ui'\nimport rbush from 'rbush'\nimport Victor from 'victor'\n\nimport {\n  lvlBlockFactory,\n  distance,\n} from 'lib/utils'\n\nconst testLevel1Map = [\n [1,1,1,1,1,1,1,1,1,1,1],\n [1,0,0,0,0,0,0,0,0,0,1],\n [1,0,0,0,0,0,0,0,0,0,1],\n [1,0,0,0,0,0,0,0,0,0,1],\n [1,0,0,0,0,0,0,0,0,0,1],\n [1,0,0,0,0,0,0,0,0,0,1],\n [1,0,0,0,0,0,0,0,0,0,1],\n [1,0,0,0,0,0,0,0,0,0,1],\n [1,0,0,0,0,2,0,0,0,0,1],\n [1,1,1,1,1,1,1,1,1,1,1]\n]\n\nexport const testLevel1 = function(game) {\n  let obj\n\n  const level = Object.create({\n    map: testLevel1,\n    objects: [],\n    game: game,\n  })\n\n  // TODO add to utils\n  const removeFromList = (obj, list) => {\n    const idx = list.indexOf(obj)\n    if (idx > - 1) {\n      list.splice(idx, 1)\n    }\n  }\n\n  const removeObj = function() {\n    removeFromList(this, game.objects)\n    removeFromList(this, level.objects)\n    game.tree.remove(this)\n  }\n\n  level.update = function() {\n    this.objects.forEach((obj) => {\n      obj.update()\n    })\n  }\n\n  level.render = function() {\n    this.objects.forEach((obj) => {\n      obj.draw()\n    })\n  }\n\n  level.testMap = testLevel1Map\n  const rows = level.testMap.length - 1\n  level.rows = rows\n  let tank\n  for (let i = 0; i <= rows; i++) {\n    const cells = level.testMap[i].length - 1\n    level.cells = cells\n    for (let j = 0; j <= cells; j++) {\n      let blockType = level.testMap[i][j]\n      if (blockType === 2) {\n        blockType = 1\n        tank = new Tank({\n          remove: removeObj,\n          color: '#03a9f4',\n          position: new Victor(\n            51 * j, 51 * i\n          ),\n        })\n      }\n      obj = lvlBlockFactory(blockType, i, j)\n      level.objects.push(obj)\n    }\n  }\n\n  const enemyTank = new EnemyTank({\n    remove: removeObj,\n    color: 'green',\n    position: new Victor(\n      innerWidth - 100,\n      innerHeight / 2\n    ),\n  })\n  const enemyTank2 = new EnemyTank({\n    remove: removeObj,\n    color: 'red',\n    position: new Victor(\n      innerWidth - 100,\n      (innerHeight / 2) - 50\n    ),\n  })\n  const enemyTank3 = new EnemyTank({\n    remove: removeObj,\n    color: 'black',\n    headColor: '#03a9f4',\n    position: new Victor(\n      innerWidth - 100,\n      (innerHeight / 2) - 100\n    ),\n  })\n  const enemyTank4 = new EnemyTank({\n    remove: removeObj,\n    color: 'silver',\n    headColor: 'black',\n    position: new Victor(\n      innerWidth - 100,\n      (innerHeight / 2) - 150\n    ),\n  })\n  const enemyTank5 = new EnemyTank({\n    remove: removeObj,\n    color: 'aqua',\n    headColor: 'blue',\n    position: new Victor(\n      innerWidth - 100,\n      (innerHeight / 2) + 150\n    ),\n  })  \n  const enemyTank6 = new EnemyTank({\n    remove: removeObj,\n    color: 'orange',\n    headColor: 'black',\n    position: new Victor(\n      innerWidth - 100,\n      (innerHeight / 2) + 50\n    ),\n  })\n  const enemyTank7 = new EnemyTank({\n    remove: removeObj,\n    color: 'brown',\n    headColor: 'black',\n    position: new Victor(\n      innerWidth - 100,\n      (innerHeight / 2) + 100\n    ),\n  })  \n\n  window.enemyTank = enemyTank\n\n  tank.initPlayer()\n  game.objects = [\n    tank, \n    enemyTank, \n    enemyTank2, \n    enemyTank3,\n    enemyTank4,\n    enemyTank5,\n    enemyTank6,\n    enemyTank7\n  ]\n  game.tree = rbush().load(game.objects)\n  level.objects = level.objects.concat(game.objects)\n  return level\n}\n","'use strict';\n\nmodule.exports = TinyQueue;\nmodule.exports.default = TinyQueue;\n\nfunction TinyQueue(data, compare) {\n    if (!(this instanceof TinyQueue)) return new TinyQueue(data, compare);\n\n    this.data = data || [];\n    this.length = this.data.length;\n    this.compare = compare || defaultCompare;\n\n    if (this.length > 0) {\n        for (var i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nTinyQueue.prototype = {\n\n    push: function (item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    },\n\n    pop: function () {\n        if (this.length === 0) return undefined;\n\n        var top = this.data[0];\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = this.data[this.length];\n            this._down(0);\n        }\n        this.data.pop();\n\n        return top;\n    },\n\n    peek: function () {\n        return this.data[0];\n    },\n\n    _up: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var item = data[pos];\n\n        while (pos > 0) {\n            var parent = (pos - 1) >> 1;\n            var current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    },\n\n    _down: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var halfLength = this.length >> 1;\n        var item = data[pos];\n\n        while (pos < halfLength) {\n            var left = (pos << 1) + 1;\n            var right = left + 1;\n            var best = data[left];\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n};\n","'use strict';\n\nvar Queue = require('tinyqueue');\n\nmodule.exports = knn;\n\nfunction knn(tree, x, y, n, predicate) {\n    var node = tree.data,\n        result = [],\n        toBBox = tree.toBBox,\n        i, child;\n\n    var queue = new Queue(null, compareDist);\n\n    while (node) {\n        for (i = 0; i < node.children.length; i++) {\n            child = node.children[i];\n            queue.push({\n                node: child,\n                isItem: node.leaf,\n                dist: boxDist(x, y, node.leaf ? toBBox(child) : child)\n            });\n        }\n\n        while (queue.length && queue.peek().isItem) {\n            var candidate = queue.pop().node;\n            if (!predicate || predicate(candidate))\n                result.push(candidate);\n            if (n && result.length === n) return result;\n        }\n\n        node = queue.pop();\n        if (node) node = node.node;\n    }\n\n    return result;\n}\n\nfunction compareDist(a, b) {\n    return a.dist - b.dist;\n}\n\nfunction boxDist(x, y, box) {\n    var dx = axisDist(x, box.minX, box.maxX),\n        dy = axisDist(y, box.minY, box.maxY);\n    return dx * dx + dy * dy;\n}\n\nfunction axisDist(k, min, max) {\n    return k < min ? min - k :\n           k <= max ? 0 :\n           k - max;\n}\n","\nexport class StackFSM {\n\n  stack = []\n\n  popState() {\n    return this.stack.pop()\n  }\n\n  pushState(state) {\n    if (this.getCurrentState() !== state) {\n      this.stack.push(state)\n    }\n  }\n\n  getCurrentState() {\n    return this.stack.length > 0 ?\n      this.stack[this.stack.length - 1] : null \n  }\n\n  update() {\n    const state = this.getCurrentState()\n    if (state !== null) {\n      state()\n    }\n  }\n\n}\n","export default {\n  'moveTo': {\n    init: function(x, y, relative) {\n      if (typeof(x) !== 'number' || typeof(y) !== 'number') {\n        return new Error('x, y is requried')\n      }\n      const state = this.state\n      const target = this.target\n      if (relative) {\n    \t\tstate.position = {\n    \t\t  x: target.x + x,\n    \t\t  y: target.y + y,\n    \t\t}\n      } else {\n\t\t    state.position = {x, y}\n      }\n    },\n    update: function() {\n      const state = this.state\n      const target = this.target\n      state.endX = target.position.x === state.position.x\n      state.endY = target.position.y === state.position.y\n\n      if (state.endX && state.endY) {\n        this.complete()\n      } else {\n        target.moveTo(state.position)\n      }\n    }\n  },\n\n  fire: {\n    init: function(x, y) {\n      if (x < -1 || x > 1) {\n        throw new Error('x has not normalized value')\n      }\n      if (y < - 1 || y > 1) {\n        throw new Error('y has not normalized value')\n      }\n      if (x !== undefined && y !== undefined) {\n        this.target.dirVec.x = x\n        this.target.dirVec.y = y\n      }\n    },\n    update: function() {\n      this.target.fire()\n      this.complete()\n    }\n  }\n\n}","import commands from 'lib/commands'\n\nexport class CommandQueue {\n  \n  constructor(target) {\n    this.queue = []\n    this.target = target || null\n  }\n\n  getFirst() {\n    return this.queue[0]\n  }\n\n  get length() {\n    return this.queue.length\n  }\n\n  pop() {\n    const result = this.queue.shift()\n    if (this.queue.length > 0) {\n      const current = this.getFirst()\n      if (current.getStatus() === 'idle') {\n        current.run.apply(current, current.args)\n      }\n    }\n    return result\n  }\n\n  update() {\n    if (this.queue.length > 0) {\n      this.getFirst().update()\n    }\n  }\n\n  clear() {\n    this.queue = []\n  }\n\n  log() {\n    console.log(this.queue)\n  }\n\n  push(name) {\n    const command = new Command(this.target, name)\n    const args = Array.prototype.slice.call(arguments, 1)\n    if (this.length === 0) {\n      command.run.apply(command, args)\n    } else {\n      command.args = args\n    }\n    this.queue.push(command)\n    return command\n  }\n\n}\n\nexport class Command {\n  \n  constructor(target, name) {\n    if (!name) {\n      throw new Error('name field is required by Command constructor');\n    }\n    this.statuses = {\n      0 : 'idle',\n      1 : 'is-running',\n      2 : 'paused',\n      3 : 'completed',\n      4 : 'aborted',\n      5 : 'waiting',\n    }\n    this.target = target\n    this.currentStatus = 0\n    this.name = name\n    this.state = {}\n  }\n\n  // method is used?\n  getName() {\n    return this.name\n  }\n\n  run() {\n    const text = `Cant find command with name: ${this.name}`\n    const job = commands[this.name]\n    if (!job) { \n      throw new Error(text)\n    }\n    this.job = job\n    this.currentStatus = 1\n    this.job.init.apply(this, arguments)\n  }\n\n  // method not used\n  stop() {\n    this.currentStatus = 2\n  }\n\n  // method not used\n  end() {\n    this.currentStatus = 4\n  }\n\n  getStatus() {   \n    return this.statuses[this.currentStatus]\n  }\n\n  update() {\n    if (this.job && this.job.update) {\n      this.job.update.call(this)\n    }\n  }\n\n  complete() {\n    this.currentStatus = 3\n    this.target.queue.pop()\n  }\n\n}","import { getCanvasEl } from 'lib/utils'\n\n// TODO MOVE TO UTILS\nconst drawFPS = function (ctx: any, value: any, x: number, y: number, color:any) {\n  ctx.fillStyle = color || 'black'\n  ctx.font = '20px Helvetica'\n  ctx.fillText(String(Math.round(value)), x + 20, y - 5)\n}\n\nexport default class Game {\n    private reqId: number;\n\n    static getCanvasCtx(): any {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    maxFps = 100\n\n  listeners: any[] = []\n\n  state = {\n    paused: false\n  }\n\n  time = {\n    seconds: 0,\n    minutes: 0,\n    hours: 0,\n  }\n    private fps: any;\n    private readonly frameDuration: number;\n    private lastPausedTime: number;\n    private canvasEl: any;\n    private ctx: CanvasRenderingContext2D;\n    private lastLoopTime: number;\n    private currentLevel: any;\n    private paused: any;\n    private dt: any;\n    private mouse: any;\n    private canvas: any;\n\n  constructor() {\n    this.frameDuration = 1 / this.maxFps\n  }\n\n  pause() {\n    this.state.paused = true\n    this.lastPausedTime = Date.now()\n  }\n\n  play() {\n    this.state.paused = false\n    this.loop()\n  }\n\n  onResize() {\n    // IMPLEMENT\n  }\n\n  onMouseMove() {\n    // IMPLEMENT\n  }\n\n  setCanvasEl(canvas:any) {\n    if (!canvas) {\n      this.canvasEl = getCanvasEl()\n    }\n    else if (canvas) {\n      this.canvasEl = canvas\n    }\n  }\n\n  getDt() {\n    return this.dt\n  }\n\n  getCtx() {\n    this.ctx = this.canvasEl.getContext('2d')\n    return this.ctx\n  }\n\n  setContext() {\n    this.ctx = Game.getCanvasCtx()\n  }\n\n  addListeners() {\n    // Event Listeners\n    addEventListener('mousemove', event => {\n      this.mouse.x = event.clientX\n      this.mouse.y = event.clientY\n    })\n\n    addEventListener('resize', () => {\n      this.canvas.width = innerWidth\n      this.canvas.height = innerHeight\n      this.start()\n    })\n  }\n\n  loop() {\n    this.reqId = requestAnimationFrame(() => this.loop())\n    const now = performance.now()\n    if (!this.lastLoopTime) {\n      this.lastLoopTime = now\n      return false\n    }\n    this.dt = (now - this.lastLoopTime) / 1000\n    if (this.dt > this.frameDuration) {\n      this.fps = 1 / this.dt\n      this.update()\n      this.render()\n      this.lastLoopTime = now - (\n        this.dt % this.frameDuration\n      )\n      this.time.seconds = (this.lastLoopTime / 1000)\n    }\n  }\n\n  update() {\n    if (!this.paused) {\n      this.currentLevel.update(this)\n    }\n  }\n\n  loadLevel(parameters: { fn: any }) {\n      let fn = parameters.fn;\n    this.currentLevel = fn(this)\n  }\n\n  render() {\n    const c = this.getCtx()\n    c.clearRect(0, 0, this.canvasEl.width, this.canvasEl.height)\n\n    this.currentLevel.render(this)\n    drawFPS(this.getCtx(), this.fps, innerWidth - 50, 25, 'black')\n  }\n\n  start() {\n    if (!this.state.paused)\n      this.play()\n  }\n\n}\n\n","import Game from 'core/game.ts'\nimport { testLevel1 } from 'core/level'\n\nconst initTestEnvirotment = function() {\n  const game = window.game = new Game()\n  game.setCanvasEl()\n  game.loadLevel({fn: testLevel1}, 'test-1')\n  game.start()\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  initTestEnvirotment()\n})\n\n// TODO READ PERFOMANCE TIPS\n// https://www.html5rocks.com/en/tutorials/canvas/performance/\n"],"sourceRoot":""}